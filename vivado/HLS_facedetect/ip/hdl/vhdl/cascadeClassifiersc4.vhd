-- ==============================================================
-- File generated on Thu Jul 18 13:24:11 +0200 2019
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
-- SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
-- IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
-- Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity cascadeClassifiersc4_rom is 
    generic(
             DWIDTH     : integer := 4; 
             AWIDTH     : integer := 12; 
             MEM_SIZE    : integer := 2913
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of cascadeClassifiersc4_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 34=> "0000", 35 => "0110", 36 to 47=> "0000", 48 => "0111", 49 to 55=> "0000", 
    56 => "0011", 57 to 61=> "0000", 62 => "0011", 63 to 69=> "0000", 70 => "0111", 
    71 to 74=> "0000", 75 => "0101", 76 => "0111", 77 to 104=> "0000", 105 => "0011", 
    106 to 108=> "0000", 109 to 110=> "0011", 111 to 117=> "0000", 118 => "0110", 119 => "0000", 
    120 => "0101", 121 to 122=> "0110", 123 to 151=> "0000", 152 => "0101", 153 to 159=> "0000", 
    160 => "1000", 161 to 163=> "0000", 164 => "0010", 165 to 175=> "0000", 176 => "0010", 
    177 => "0110", 178 to 186=> "0000", 187 => "1001", 188 to 201=> "0000", 202 => "0110", 
    203 to 205=> "0000", 206 to 207=> "0010", 208 to 214=> "0000", 215 => "0011", 216 => "0000", 
    217 => "0111", 218 to 222=> "0000", 223 => "0011", 224 => "0010", 225 to 229=> "0000", 
    230 => "0111", 231 to 233=> "0000", 234 => "0010", 235 => "0011", 236 to 240=> "0000", 
    241 => "0011", 242 => "0100", 243 to 247=> "0000", 248 => "1000", 249 => "0010", 
    250 to 254=> "0000", 255 => "0101", 256 to 260=> "0000", 261 => "0110", 262 to 287=> "0000", 
    288 => "0110", 289 to 290=> "0000", 291 => "0110", 292 to 316=> "0000", 317 => "1000", 
    318 => "0110", 319 => "1000", 320 to 326=> "0000", 327 => "0101", 328 to 335=> "0000", 
    336 to 337=> "1001", 338 to 358=> "0000", 359 => "0010", 360 => "0011", 361 => "1011", 
    362 => "0111", 363 => "1010", 364 to 365=> "0000", 366 to 367=> "0110", 368 to 372=> "0000", 
    373 to 375=> "0110", 376 to 411=> "0000", 412 => "0011", 413 to 414=> "0000", 415 to 416=> "0110", 
    417 to 443=> "0000", 444 => "0011", 445 to 450=> "0000", 451 => "0011", 452 => "0000", 
    453 => "1000", 454 => "0010", 455 to 458=> "0000", 459 to 460=> "0101", 461 => "0010", 
    462 => "0000", 463 to 464=> "0011", 465 to 472=> "0000", 473 => "0111", 474 to 477=> "0000", 
    478 => "0111", 479 to 480=> "0000", 481 => "0111", 482 to 489=> "0000", 490 => "1001", 
    491 to 519=> "0000", 520 => "0101", 521 => "1000", 522 to 524=> "0000", 525 => "0011", 
    526 to 528=> "0000", 529 => "0101", 530 to 541=> "0000", 542 => "0010", 543 to 545=> "0000", 
    546 => "0111", 547 => "0000", 548 to 549=> "0111", 550 to 553=> "0000", 554 => "0100", 
    555 to 558=> "0000", 559 => "0101", 560 to 586=> "0000", 587 => "0110", 588 => "1001", 
    589 to 590=> "0000", 591 => "0101", 592 => "0010", 593 => "0000", 594 to 595=> "0100", 
    596 to 623=> "0000", 624 => "0011", 625 => "0101", 626 to 654=> "0000", 655 => "0101", 
    656 to 658=> "0000", 659 => "0011", 660 to 664=> "0000", 665 to 666=> "0111", 667 to 674=> "0000", 
    675 => "0011", 676 to 677=> "0000", 678 => "0011", 679 to 680=> "0101", 681 to 682=> "0000", 
    683 => "0011", 684 to 685=> "0000", 686 => "0110", 687 to 690=> "0000", 691 => "1001", 
    692 to 693=> "0000", 694 => "1001", 695 to 698=> "0000", 699 => "0110", 700 => "0011", 
    701 to 703=> "0000", 704 => "0100", 705 to 706=> "0011", 707 to 721=> "0000", 722 => "0110", 
    723 to 725=> "0000", 726 => "0011", 727 to 750=> "0000", 751 => "0111", 752 => "0101", 
    753 to 755=> "0000", 756 to 757=> "1001", 758 => "0110", 759 to 760=> "0000", 761 => "0110", 
    762 to 769=> "0000", 770 => "0100", 771 to 774=> "0000", 775 => "0111", 776 to 777=> "0000", 
    778 => "0101", 779 to 783=> "0000", 784 => "0011", 785 => "0000", 786 => "0010", 
    787 to 799=> "0000", 800 => "0100", 801 to 806=> "0000", 807 => "0111", 808 to 818=> "0000", 
    819 => "0101", 820 to 832=> "0000", 833 => "0110", 834 to 850=> "0000", 851 => "0010", 
    852 to 854=> "0000", 855 => "0110", 856 to 858=> "0000", 859 => "0011", 860 => "0000", 
    861 => "0111", 862 => "0011", 863 to 864=> "0000", 865 => "0101", 866 => "0011", 
    867 => "0000", 868 => "0110", 869 to 875=> "0000", 876 => "0111", 877 to 910=> "0000", 
    911 => "0101", 912 => "0011", 913 to 919=> "0000", 920 => "1000", 921 to 945=> "0000", 
    946 => "0111", 947 => "0011", 948 => "0000", 949 to 950=> "0101", 951 => "0011", 
    952 => "0000", 953 => "0111", 954 => "0000", 955 => "0110", 956 => "0000", 
    957 => "1000", 958 => "0000", 959 => "0111", 960 to 961=> "0000", 962 => "0101", 
    963 to 964=> "0000", 965 to 966=> "1000", 967 => "0000", 968 => "0110", 969 to 976=> "0000", 
    977 => "0011", 978 => "1000", 979 => "0000", 980 to 981=> "1000", 982 to 989=> "0000", 
    990 => "0100", 991 => "0011", 992 to 1008=> "0000", 1009 => "0100", 1010 to 1011=> "0000", 
    1012 to 1013=> "0110", 1014 to 1015=> "0000", 1016 to 1018=> "0111", 1019 to 1020=> "0000", 1021 => "0010", 
    1022 to 1043=> "0000", 1044 => "0010", 1045 => "0000", 1046 to 1047=> "0010", 1048 to 1056=> "0000", 
    1057 => "0111", 1058 => "0011", 1059 to 1073=> "0000", 1074 => "0100", 1075 to 1079=> "0000", 
    1080 to 1081=> "0101", 1082 => "0000", 1083 => "1010", 1084 to 1086=> "0000", 1087 => "1000", 
    1088 to 1093=> "0000", 1094 to 1095=> "0100", 1096 => "0010", 1097 => "0000", 1098 => "0011", 
    1099 => "0000", 1100 => "0010", 1101 to 1136=> "0000", 1137 => "0111", 1138 => "0011", 
    1139 => "0110", 1140 => "0000", 1141 => "0100", 1142 to 1160=> "0000", 1161 => "0010", 
    1162 to 1176=> "0000", 1177 => "1000", 1178 => "0000", 1179 => "0100", 1180 to 1181=> "0011", 
    1182 to 1183=> "0000", 1184 => "0101", 1185 to 1208=> "0000", 1209 to 1210=> "0011", 1211 => "0010", 
    1212 => "0011", 1213 to 1225=> "0000", 1226 => "0101", 1227 to 1232=> "0000", 1233 => "0101", 
    1234 => "0011", 1235 to 1237=> "0000", 1238 => "0011", 1239 to 1242=> "0000", 1243 => "0101", 
    1244 to 1255=> "0000", 1256 => "1001", 1257 to 1261=> "0000", 1262 => "0010", 1263 => "0000", 
    1264 => "0110", 1265 to 1266=> "1011", 1267 to 1288=> "0000", 1289 => "0101", 1290 => "0000", 
    1291 => "0101", 1292 => "0000", 1293 => "0101", 1294 => "0000", 1295 => "1001", 
    1296 => "0000", 1297 to 1298=> "0101", 1299 => "0111", 1300 => "0000", 1301 to 1302=> "0011", 
    1303 => "0101", 1304 => "0100", 1305 => "0011", 1306 => "1001", 1307 => "0110", 
    1308 => "0100", 1309 to 1311=> "0000", 1312 => "0010", 1313 to 1314=> "0000", 1315 => "0100", 
    1316 to 1324=> "0000", 1325 to 1326=> "0110", 1327 to 1328=> "0000", 1329 to 1330=> "0110", 1331 to 1334=> "0000", 
    1335 => "0100", 1336 => "0010", 1337 to 1347=> "0000", 1348 => "0110", 1349 to 1352=> "0000", 
    1353 => "0010", 1354 => "0111", 1355 => "0011", 1356 to 1369=> "0000", 1370 => "0100", 
    1371 to 1372=> "0111", 1373 to 1376=> "0000", 1377 => "0101", 1378 to 1388=> "0000", 1389 to 1390=> "0100", 
    1391 to 1406=> "0000", 1407 => "0101", 1408 => "0111", 1409 to 1410=> "0000", 1411 => "0100", 
    1412 to 1423=> "0000", 1424 => "0100", 1425 to 1426=> "0000", 1427 => "0100", 1428 to 1447=> "0000", 
    1448 => "0010", 1449 to 1450=> "0000", 1451 => "0011", 1452 to 1458=> "0000", 1459 => "0011", 
    1460 to 1467=> "0000", 1468 to 1469=> "0111", 1470 => "1000", 1471 => "0000", 1472 => "0011", 
    1473 to 1481=> "0000", 1482 to 1483=> "0110", 1484 to 1485=> "0100", 1486 => "0000", 1487 => "0100", 
    1488 => "0011", 1489 => "1001", 1490 to 1491=> "0111", 1492 => "0000", 1493 => "1000", 
    1494 to 1495=> "0000", 1496 => "1001", 1497 => "0100", 1498 to 1499=> "0000", 1500 => "1010", 
    1501 => "0000", 1502 to 1503=> "1010", 1504 to 1505=> "0111", 1506 to 1509=> "0000", 1510 => "1000", 
    1511 => "0011", 1512 => "0000", 1513 => "0110", 1514 => "0000", 1515 => "0101", 
    1516 to 1519=> "0000", 1520 to 1521=> "0011", 1522 to 1529=> "0000", 1530 => "0101", 1531 to 1541=> "0000", 
    1542 => "0110", 1543 to 1547=> "0000", 1548 => "0110", 1549 to 1555=> "0000", 1556 => "0101", 
    1557 to 1564=> "0000", 1565 to 1566=> "0011", 1567 to 1570=> "0000", 1571 => "0011", 1572 to 1575=> "0000", 
    1576 => "0011", 1577 => "0101", 1578 to 1582=> "0000", 1583 => "0101", 1584 to 1595=> "0000", 
    1596 => "0011", 1597 to 1604=> "0000", 1605 => "0011", 1606 => "0000", 1607 => "0101", 
    1608 to 1609=> "0000", 1610 => "0101", 1611 => "0000", 1612 => "0100", 1613 to 1647=> "0000", 
    1648 => "0100", 1649 to 1650=> "0000", 1651 => "0111", 1652 => "0101", 1653 => "0110", 
    1654 to 1656=> "0000", 1657 => "0101", 1658 => "0110", 1659 => "0000", 1660 => "0101", 
    1661 to 1667=> "0000", 1668 => "0100", 1669 => "0011", 1670 to 1676=> "0000", 1677 => "0011", 
    1678 to 1679=> "0000", 1680 => "1000", 1681 to 1682=> "0000", 1683 to 1684=> "1001", 1685 => "0010", 
    1686 to 1701=> "0000", 1702 => "0100", 1703 to 1712=> "0000", 1713 => "0011", 1714 to 1719=> "0000", 
    1720 => "0011", 1721 to 1725=> "0000", 1726 => "0101", 1727 to 1750=> "0000", 1751 => "0110", 
    1752 to 1762=> "0000", 1763 => "1000", 1764 => "0011", 1765 => "0000", 1766 => "0100", 
    1767 => "0000", 1768 => "0011", 1769 => "0101", 1770 to 1785=> "0000", 1786 => "0111", 
    1787 to 1788=> "0000", 1789 => "0101", 1790 => "0000", 1791 => "0101", 1792 to 1799=> "0000", 
    1800 => "1001", 1801 to 1804=> "0000", 1805 => "0101", 1806 to 1809=> "0000", 1810 => "0011", 
    1811 to 1812=> "0000", 1813 => "1011", 1814 to 1815=> "0000", 1816 => "0010", 1817 to 1819=> "0000", 
    1820 to 1821=> "0011", 1822 to 1829=> "0000", 1830 => "0010", 1831 to 1832=> "0000", 1833 => "0110", 
    1834 to 1836=> "0000", 1837 => "0100", 1838 => "0011", 1839 => "0000", 1840 to 1841=> "0110", 
    1842 to 1861=> "0000", 1862 => "0101", 1863 to 1873=> "0000", 1874 => "0011", 1875 to 1879=> "0000", 
    1880 => "0110", 1881 to 1882=> "0000", 1883 => "0110", 1884 => "0011", 1885 to 1891=> "0000", 
    1892 to 1893=> "0100", 1894 to 1899=> "0000", 1900 to 1901=> "0011", 1902 to 1912=> "0000", 1913 => "0010", 
    1914 to 1915=> "0011", 1916 => "0000", 1917 => "0100", 1918 to 1939=> "0000", 1940 => "0111", 
    1941 to 1945=> "0000", 1946 => "0011", 1947 => "0010", 1948 => "0000", 1949 => "0111", 
    1950 to 1951=> "1001", 1952 to 1955=> "0000", 1956 => "0011", 1957 => "0000", 1958 => "0110", 
    1959 to 1962=> "0000", 1963 => "0110", 1964 to 1966=> "0000", 1967 => "0011", 1968 to 1977=> "0000", 
    1978 => "0011", 1979 to 1984=> "0000", 1985 => "0011", 1986 to 1991=> "0000", 1992 => "0011", 
    1993 to 2002=> "0000", 2003 => "0011", 2004 => "0111", 2005 => "0010", 2006 to 2008=> "0000", 
    2009 => "0101", 2010 to 2014=> "0000", 2015 => "0010", 2016 => "0000", 2017 => "0111", 
    2018 => "0000", 2019 => "1100", 2020 => "0111", 2021 => "0100", 2022 to 2024=> "0000", 
    2025 => "0010", 2026 to 2035=> "0000", 2036 => "1011", 2037 to 2038=> "0000", 2039 => "0010", 
    2040 to 2041=> "1011", 2042 => "0010", 2043 to 2045=> "0000", 2046 to 2047=> "0110", 2048 to 2060=> "0000", 
    2061 => "0111", 2062 to 2066=> "0000", 2067 => "0101", 2068 to 2069=> "0000", 2070 => "1010", 
    2071 => "0000", 2072 => "1010", 2073 => "0100", 2074 => "1010", 2075 => "0000", 
    2076 => "1010", 2077 to 2083=> "0000", 2084 => "0010", 2085 to 2088=> "0000", 2089 => "1001", 
    2090 to 2091=> "1010", 2092 => "0011", 2093 to 2094=> "0000", 2095 => "0100", 2096 => "0110", 
    2097 to 2101=> "0000", 2102 => "0110", 2103 => "1001", 2104 => "1000", 2105 => "0110", 
    2106 => "0111", 2107 to 2141=> "0000", 2142 => "0111", 2143 to 2145=> "0000", 2146 => "1010", 
    2147 to 2152=> "0000", 2153 => "1001", 2154 to 2163=> "0000", 2164 => "0110", 2165 to 2166=> "0101", 
    2167 => "0011", 2168 to 2169=> "0000", 2170 => "0011", 2171 to 2173=> "0000", 2174 => "0111", 
    2175 to 2180=> "0000", 2181 => "0101", 2182 to 2185=> "0000", 2186 => "0101", 2187 to 2188=> "0000", 
    2189 => "0101", 2190 to 2191=> "0000", 2192 => "0011", 2193 to 2196=> "0000", 2197 => "1001", 
    2198 => "0000", 2199 => "1001", 2200 to 2203=> "0000", 2204 => "1001", 2205 to 2206=> "0101", 
    2207 to 2229=> "0000", 2230 => "1010", 2231 to 2237=> "0000", 2238 => "0110", 2239 to 2244=> "0000", 
    2245 => "0101", 2246 to 2251=> "0000", 2252 => "0101", 2253 => "0011", 2254 to 2263=> "0000", 
    2264 => "0110", 2265 => "0100", 2266 to 2272=> "0000", 2273 => "0100", 2274 => "0000", 
    2275 => "1000", 2276 to 2277=> "0000", 2278 => "0010", 2279 => "0011", 2280 to 2286=> "0000", 
    2287 => "0100", 2288 => "0000", 2289 to 2292=> "0110", 2293 to 2317=> "0000", 2318 => "0101", 
    2319 => "0000", 2320 to 2321=> "0101", 2322 => "0010", 2323 to 2328=> "0000", 2329 => "0011", 
    2330 to 2336=> "0000", 2337 => "1001", 2338 to 2339=> "0110", 2340 => "0000", 2341 => "0010", 
    2342 to 2345=> "0000", 2346 to 2347=> "1011", 2348 to 2349=> "0000", 2350 => "1001", 2351 => "0111", 
    2352 to 2353=> "0000", 2354 => "1010", 2355 => "0000", 2356 => "0111", 2357 to 2364=> "0000", 
    2365 => "0100", 2366 to 2367=> "0000", 2368 to 2369=> "1010", 2370 to 2373=> "0000", 2374 => "1010", 
    2375 to 2377=> "0000", 2378 => "1010", 2379 to 2381=> "0000", 2382 to 2383=> "1010", 2384 to 2385=> "0000", 
    2386 => "0100", 2387 to 2394=> "0000", 2395 => "1001", 2396 to 2411=> "0000", 2412 => "0010", 
    2413 to 2424=> "0000", 2425 => "0010", 2426 to 2427=> "0000", 2428 to 2429=> "1011", 2430 to 2432=> "0000", 
    2433 => "0011", 2434 to 2435=> "0000", 2436 to 2437=> "0110", 2438 => "0100", 2439 to 2440=> "0000", 
    2441 => "1001", 2442 to 2444=> "0000", 2445 => "0111", 2446 to 2447=> "0000", 2448 => "0111", 
    2449 to 2455=> "0000", 2456 to 2457=> "0010", 2458 to 2459=> "0000", 2460 => "1100", 2461 to 2462=> "0000", 
    2463 => "0011", 2464 to 2478=> "0000", 2479 => "0111", 2480 to 2484=> "0000", 2485 => "0101", 
    2486 to 2489=> "0000", 2490 => "0100", 2491 to 2493=> "0110", 2494 to 2495=> "0000", 2496 => "0010", 
    2497 to 2500=> "0000", 2501 => "1010", 2502 to 2509=> "0000", 2510 => "0011", 2511 => "0010", 
    2512 => "0000", 2513 => "0110", 2514 to 2534=> "0000", 2535 to 2536=> "1010", 2537 => "1001", 
    2538 => "0000", 2539 => "0011", 2540 => "1001", 2541 => "0000", 2542 => "0011", 
    2543 to 2544=> "1010", 2545 to 2552=> "0000", 2553 => "0011", 2554 => "0000", 2555 => "0011", 
    2556 to 2567=> "0000", 2568 => "0111", 2569 to 2579=> "0000", 2580 => "1001", 2581 to 2584=> "0101", 
    2585 to 2586=> "0000", 2587 => "0011", 2588 => "0000", 2589 => "1000", 2590 => "0100", 
    2591 => "0000", 2592 => "0100", 2593 to 2594=> "0000", 2595 => "0100", 2596 => "0000", 
    2597 to 2598=> "0110", 2599 to 2607=> "0000", 2608 => "0011", 2609 to 2610=> "0000", 2611 => "0010", 
    2612 => "1010", 2613 to 2615=> "0000", 2616 => "0011", 2617 to 2625=> "0000", 2626 => "0101", 
    2627 to 2640=> "0000", 2641 => "0111", 2642 => "0101", 2643 to 2644=> "0000", 2645 to 2646=> "0111", 
    2647 => "0000", 2648 => "0110", 2649 to 2652=> "0000", 2653 => "0101", 2654 to 2655=> "0000", 
    2656 => "0010", 2657 to 2669=> "0000", 2670 => "1010", 2671 => "0110", 2672 to 2673=> "0000", 
    2674 => "0100", 2675 => "0101", 2676 to 2678=> "0000", 2679 => "0010", 2680 to 2705=> "0000", 
    2706 => "0011", 2707 => "0100", 2708 to 2710=> "0000", 2711 => "0100", 2712 to 2717=> "0000", 
    2718 => "0011", 2719 to 2722=> "0000", 2723 => "0011", 2724 to 2727=> "0000", 2728 => "0011", 
    2729 to 2756=> "0000", 2757 => "0011", 2758 => "0000", 2759 => "0110", 2760 to 2768=> "0000", 
    2769 => "1000", 2770 to 2771=> "1001", 2772 to 2773=> "0000", 2774 => "0011", 2775 => "0000", 
    2776 to 2777=> "0100", 2778 to 2779=> "0110", 2780 to 2785=> "0000", 2786 => "0110", 2787 to 2793=> "0000", 
    2794 to 2795=> "0101", 2796 => "0000", 2797 => "0011", 2798 to 2801=> "0101", 2802 to 2815=> "0000", 
    2816 to 2817=> "0111", 2818 to 2825=> "0000", 2826 => "0011", 2827 to 2831=> "0000", 2832 => "1001", 
    2833 to 2837=> "0000", 2838 => "0101", 2839 to 2845=> "0000", 2846 => "0011", 2847 to 2850=> "0000", 
    2851 => "0010", 2852 to 2856=> "0000", 2857 => "0011", 2858 => "1001", 2859 to 2865=> "0000", 
    2866 => "0011", 2867 to 2874=> "0000", 2875 to 2877=> "0111", 2878 => "0010", 2879 => "1010", 
    2880 to 2881=> "0110", 2882 to 2883=> "0100", 2884 to 2893=> "0000", 2894 => "0100", 2895 => "0011", 
    2896 to 2897=> "0000", 2898 to 2899=> "0110", 2900 => "0000", 2901 => "0101", 2902 to 2911=> "0000", 
    2912 => "1011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity cascadeClassifiersc4 is
    generic (
        DataWidth : INTEGER := 4;
        AddressRange : INTEGER := 2913;
        AddressWidth : INTEGER := 12);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of cascadeClassifiersc4 is
    component cascadeClassifiersc4_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    cascadeClassifiersc4_rom_U :  component cascadeClassifiersc4_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


