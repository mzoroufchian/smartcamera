-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity int_sqrt is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    value_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of int_sqrt is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_s_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1545 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_198_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_30_reg_1552 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_4_1_fu_218_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_4_1_reg_1558 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_cast_reg_1563 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_cast_reg_1570 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_cast_reg_1577 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_cast_reg_1584 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_cast_reg_1591 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_cast_reg_1598 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_cast_reg_1605 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_cast_reg_1612 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_25_cast_reg_1619 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_cast_reg_1626 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_cast_reg_1633 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_cast_reg_1640 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_cast_reg_1647 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_1_1_fu_380_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_1_1_reg_1654 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal not_tmp_40_2_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_40_2_reg_1671 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_3_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_3_reg_1688 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_220_fu_527_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_220_reg_1694 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_221_fu_531_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_221_reg_1699 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_40_3_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_40_3_reg_1704 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal not_tmp_40_4_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_40_4_reg_1719 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_5_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_5_reg_1734 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_230_fu_683_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_230_reg_1740 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_231_fu_687_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_231_reg_1745 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_40_5_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_40_5_reg_1750 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal not_tmp_40_6_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_40_6_reg_1763 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_7_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_7_reg_1776 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_240_fu_843_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_240_reg_1782 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_241_fu_847_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_241_reg_1787 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_40_7_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_40_7_reg_1792 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal not_tmp_40_8_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_40_8_reg_1803 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_9_fu_990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_9_reg_1814 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_250_fu_1007_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_250_reg_1820 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_251_fu_1011_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_251_reg_1825 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_40_9_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_40_9_reg_1830 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal not_tmp_40_s_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_40_s_reg_1839 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_10_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_10_reg_1848 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_260_fu_1175_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_260_reg_1854 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_261_fu_1179_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_261_reg_1859 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_40_1_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_40_1_reg_1864 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal not_tmp_40_10_fu_1258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_40_10_reg_1871 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_12_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_12_reg_1878 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_270_fu_1347_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_270_reg_1884 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_271_fu_1351_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_271_reg_1889 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_fu_154_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_cast_fu_164_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_4_fu_174_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_1_fu_180_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_cast_fu_188_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal c_3_1_cast2_fu_206_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_1_cast_cast1_fu_210_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_1_cast_cast_fu_361_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_40_1_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_2_1_fu_354_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_3_1_fu_373_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_114_fu_388_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_115_fu_391_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_116_fu_394_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_2_fu_413_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_2_fu_421_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_3_2_fu_406_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_cast_fu_427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_212_fu_402_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_40_2_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_215_fu_454_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_213_fu_437_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_214_fu_444_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_117_fu_458_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_216_fu_465_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_118_fu_471_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_3_fu_490_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_3_fu_500_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_3_3_fu_483_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_cast_fu_506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_217_fu_479_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_218_fu_516_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_219_fu_523_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_119_fu_542_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_120_fu_548_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_fu_565_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_4_fu_575_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_3_4_fu_558_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_4_cast_fu_581_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_222_fu_554_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_40_4_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_225_fu_608_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_223_fu_591_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_224_fu_598_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_121_fu_612_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_226_fu_619_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_122_fu_625_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_5_fu_644_p6 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_5_fu_656_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_3_5_fu_637_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_5_cast_fu_662_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_227_fu_633_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_228_fu_672_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_229_fu_679_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_123_fu_698_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_124_fu_704_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_6_fu_721_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_6_fu_733_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_3_6_fu_714_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_6_cast_fu_739_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_232_fu_710_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_40_6_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_235_fu_766_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_233_fu_749_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_234_fu_756_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_125_fu_770_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_236_fu_777_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_126_fu_783_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_7_fu_802_p8 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_7_fu_816_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_3_7_fu_795_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_7_cast_fu_822_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_237_fu_791_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_238_fu_832_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_239_fu_839_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_127_fu_858_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_128_fu_864_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_8_fu_881_p9 : STD_LOGIC_VECTOR (9 downto 0);
    signal b_8_fu_895_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal c_3_8_fu_874_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_8_cast_fu_901_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_242_fu_870_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_40_8_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_245_fu_928_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_243_fu_911_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_244_fu_918_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_129_fu_932_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_246_fu_939_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_130_fu_945_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_9_fu_964_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal b_9_fu_980_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal c_3_9_fu_957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_9_cast_fu_986_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_247_fu_953_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_248_fu_996_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_249_fu_1003_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_131_fu_1022_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_132_fu_1028_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_s_21_fu_1045_p11 : STD_LOGIC_VECTOR (11 downto 0);
    signal b_s_fu_1061_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_3_s_fu_1038_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_cast_fu_1067_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_252_fu_1034_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_40_s_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_255_fu_1094_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_253_fu_1077_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_254_fu_1084_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_133_fu_1098_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_256_fu_1105_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_134_fu_1111_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_1_fu_1130_p12 : STD_LOGIC_VECTOR (12 downto 0);
    signal b_1_fu_1148_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal c_3_1_fu_1123_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_10_cast_fu_1154_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_257_fu_1119_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_258_fu_1164_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_259_fu_1171_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_135_fu_1190_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_136_fu_1196_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_10_fu_1213_p13 : STD_LOGIC_VECTOR (13 downto 0);
    signal b_10_fu_1231_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal c_3_10_fu_1206_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_11_cast_fu_1237_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_262_fu_1202_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_40_11_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_265_fu_1264_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_263_fu_1247_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_264_fu_1254_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_137_fu_1268_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_266_fu_1275_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_138_fu_1281_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_11_fu_1300_p14 : STD_LOGIC_VECTOR (14 downto 0);
    signal b_11_fu_1320_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal c_3_11_fu_1293_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_12_cast_fu_1326_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_267_fu_1289_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_268_fu_1336_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_269_fu_1343_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_139_fu_1362_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_140_fu_1368_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_40_11_fu_1357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1385_p15 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_12_fu_1405_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal c_3_12_fu_1378_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_13_cast_fu_1411_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_272_fu_1374_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_40_13_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_276_fu_1441_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_273_fu_1421_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_274_fu_1428_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_141_fu_1445_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_277_fu_1452_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_142_fu_1458_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_275_fu_1438_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal not_tmp_40_12_fu_1432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1474_p16 : STD_LOGIC_VECTOR (16 downto 0);
    signal b_13_fu_1496_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal c_3_13_fu_1466_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_14_cast_fu_1502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ult_fu_1506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                a_1_1_reg_1654 <= a_1_1_fu_380_p3;
                not_tmp_40_2_reg_1671 <= not_tmp_40_2_fu_448_p2;
                tmp_220_reg_1694 <= tmp_220_fu_527_p1;
                tmp_221_reg_1699 <= tmp_221_fu_531_p2;
                tmp_40_3_reg_1688 <= tmp_40_3_fu_510_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                c_4_1_reg_1558 <= c_4_1_fu_218_p2;
                tmp_17_cast_reg_1563 <= value_r(27 downto 26);
                tmp_18_cast_reg_1570 <= value_r(25 downto 24);
                tmp_19_cast_reg_1577 <= value_r(23 downto 22);
                tmp_20_cast_reg_1584 <= value_r(21 downto 20);
                tmp_21_cast_reg_1591 <= value_r(19 downto 18);
                tmp_22_cast_reg_1598 <= value_r(17 downto 16);
                tmp_23_cast_reg_1605 <= value_r(15 downto 14);
                tmp_24_cast_reg_1612 <= value_r(13 downto 12);
                tmp_25_cast_reg_1619 <= value_r(11 downto 10);
                tmp_26_cast_reg_1626 <= value_r(9 downto 8);
                tmp_27_cast_reg_1633 <= value_r(7 downto 6);
                tmp_28_cast_reg_1640 <= value_r(5 downto 4);
                tmp_29_cast_reg_1647 <= value_r(3 downto 2);
                tmp_30_reg_1552 <= tmp_30_fu_198_p3;
                tmp_s_reg_1545 <= tmp_s_fu_168_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                not_tmp_40_10_reg_1871 <= not_tmp_40_10_fu_1258_p2;
                not_tmp_40_1_reg_1864 <= not_tmp_40_1_fu_1185_p2;
                tmp_270_reg_1884 <= tmp_270_fu_1347_p1;
                tmp_271_reg_1889 <= tmp_271_fu_1351_p2;
                tmp_40_12_reg_1878 <= tmp_40_12_fu_1330_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                not_tmp_40_3_reg_1704 <= not_tmp_40_3_fu_537_p2;
                not_tmp_40_4_reg_1719 <= not_tmp_40_4_fu_602_p2;
                tmp_230_reg_1740 <= tmp_230_fu_683_p1;
                tmp_231_reg_1745 <= tmp_231_fu_687_p2;
                tmp_40_5_reg_1734 <= tmp_40_5_fu_666_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                not_tmp_40_5_reg_1750 <= not_tmp_40_5_fu_693_p2;
                not_tmp_40_6_reg_1763 <= not_tmp_40_6_fu_760_p2;
                tmp_240_reg_1782 <= tmp_240_fu_843_p1;
                tmp_241_reg_1787 <= tmp_241_fu_847_p2;
                tmp_40_7_reg_1776 <= tmp_40_7_fu_826_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                not_tmp_40_7_reg_1792 <= not_tmp_40_7_fu_853_p2;
                not_tmp_40_8_reg_1803 <= not_tmp_40_8_fu_922_p2;
                tmp_250_reg_1820 <= tmp_250_fu_1007_p1;
                tmp_251_reg_1825 <= tmp_251_fu_1011_p2;
                tmp_40_9_reg_1814 <= tmp_40_9_fu_990_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                not_tmp_40_9_reg_1830 <= not_tmp_40_9_fu_1017_p2;
                not_tmp_40_s_reg_1839 <= not_tmp_40_s_fu_1088_p2;
                tmp_260_reg_1854 <= tmp_260_fu_1175_p1;
                tmp_261_reg_1859 <= tmp_261_fu_1179_p2;
                tmp_40_10_reg_1848 <= tmp_40_10_fu_1158_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    a_1_1_fu_380_p3 <= 
        a_2_1_fu_354_p3 when (tmp_40_1_fu_368_p2(0) = '1') else 
        a_3_1_fu_373_p3;
    a_2_1_fu_354_p3 <= 
        ap_const_lv2_0 when (tmp_s_reg_1545(0) = '1') else 
        ap_const_lv2_2;
    a_3_1_fu_373_p3 <= 
        ap_const_lv2_1 when (tmp_s_reg_1545(0) = '1') else 
        ap_const_lv2_3;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ((((((((((((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_reg_1704) & not_tmp_40_4_reg_1719) & not_tmp_40_5_reg_1750) & not_tmp_40_6_reg_1763) & not_tmp_40_7_reg_1792) & not_tmp_40_8_reg_1803) & not_tmp_40_9_reg_1830) & not_tmp_40_s_reg_1839) & not_tmp_40_1_reg_1864) & not_tmp_40_10_reg_1871) & not_tmp_40_11_fu_1357_p2) & not_tmp_40_12_fu_1432_p2) & rev4_fu_1512_p2);
    b_10_cast_fu_1154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_1_fu_1148_p2),32));
    b_10_fu_1231_p2 <= (tmp_10_fu_1213_p13 or ap_const_lv14_1);
    b_11_cast_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_10_fu_1231_p2),32));
    b_11_fu_1320_p2 <= (tmp_11_fu_1300_p14 or ap_const_lv15_1);
    b_12_cast_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_11_fu_1320_p2),32));
    b_12_fu_1405_p2 <= (tmp_12_fu_1385_p15 or ap_const_lv16_1);
    b_13_cast_fu_1411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_12_fu_1405_p2),32));
    b_13_fu_1496_p2 <= (tmp_13_fu_1474_p16 or ap_const_lv17_1);
    b_14_cast_fu_1502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_13_fu_1496_p2),32));
    b_1_cast_cast1_fu_210_p3 <= 
        ap_const_lv6_1 when (tmp_s_fu_168_p2(0) = '1') else 
        ap_const_lv6_5;
    b_1_cast_cast_fu_361_p3 <= 
        ap_const_lv5_1 when (tmp_s_reg_1545(0) = '1') else 
        ap_const_lv5_5;
    b_1_fu_1148_p2 <= (tmp_1_fu_1130_p12 or ap_const_lv13_1);
    b_2_cast_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_2_fu_421_p2),32));
    b_2_fu_421_p2 <= (tmp_2_fu_413_p3 or ap_const_lv4_1);
    b_3_cast_fu_506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_3_fu_500_p2),32));
    b_3_fu_500_p2 <= (tmp_3_fu_490_p4 or ap_const_lv5_1);
    b_4_cast_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_4_fu_575_p2),32));
    b_4_fu_575_p2 <= (tmp_4_fu_565_p5 or ap_const_lv6_1);
    b_5_cast_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_5_fu_656_p2),32));
    b_5_fu_656_p2 <= (tmp_5_fu_644_p6 or ap_const_lv7_1);
    b_6_cast_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_6_fu_733_p2),32));
    b_6_fu_733_p2 <= (tmp_6_fu_721_p7 or ap_const_lv8_1);
    b_7_cast_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_7_fu_816_p2),32));
    b_7_fu_816_p2 <= (tmp_7_fu_802_p8 or ap_const_lv9_1);
    b_8_cast_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_8_fu_895_p2),32));
    b_8_fu_895_p2 <= (tmp_8_fu_881_p9 or ap_const_lv10_1);
    b_9_cast_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_9_fu_980_p2),32));
    b_9_fu_980_p2 <= (tmp_9_fu_964_p10 or ap_const_lv11_1);
    b_cast_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_s_fu_1061_p2),32));
    b_s_fu_1061_p2 <= (tmp_s_21_fu_1045_p11 or ap_const_lv12_1);
    c_1_fu_180_p3 <= 
        ap_const_lv3_0 when (tmp_s_fu_168_p2(0) = '1') else 
        c_4_fu_174_p2;
    c_3_10_fu_1206_p3 <= (tmp_136_fu_1196_p3 & tmp_27_cast_reg_1633);
    c_3_11_fu_1293_p3 <= (tmp_138_fu_1281_p3 & tmp_28_cast_reg_1640);
    c_3_12_fu_1378_p3 <= (tmp_140_fu_1368_p3 & tmp_29_cast_reg_1647);
    c_3_13_fu_1466_p3 <= (tmp_142_fu_1458_p3 & tmp_275_fu_1438_p1);
        c_3_1_cast2_fu_206_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_fu_198_p3),6));

    c_3_1_fu_1123_p3 <= (tmp_134_fu_1111_p3 & tmp_26_cast_reg_1626);
    c_3_2_fu_406_p3 <= (tmp_116_fu_394_p3 & tmp_17_cast_reg_1563);
    c_3_3_fu_483_p3 <= (tmp_118_fu_471_p3 & tmp_18_cast_reg_1570);
    c_3_4_fu_558_p3 <= (tmp_120_fu_548_p3 & tmp_19_cast_reg_1577);
    c_3_5_fu_637_p3 <= (tmp_122_fu_625_p3 & tmp_20_cast_reg_1584);
    c_3_6_fu_714_p3 <= (tmp_124_fu_704_p3 & tmp_21_cast_reg_1591);
    c_3_7_fu_795_p3 <= (tmp_126_fu_783_p3 & tmp_22_cast_reg_1598);
    c_3_8_fu_874_p3 <= (tmp_128_fu_864_p3 & tmp_23_cast_reg_1605);
    c_3_9_fu_957_p3 <= (tmp_130_fu_945_p3 & tmp_24_cast_reg_1612);
    c_3_s_fu_1038_p3 <= (tmp_132_fu_1028_p3 & tmp_25_cast_reg_1619);
    c_4_1_fu_218_p2 <= std_logic_vector(signed(c_3_1_cast2_fu_206_p1) - signed(b_1_cast_cast1_fu_210_p3));
    c_4_fu_174_p2 <= std_logic_vector(unsigned(tmp_cast_fu_164_p1) + unsigned(ap_const_lv3_7));
    not_tmp_40_10_fu_1258_p2 <= (tmp_40_11_fu_1241_p2 xor ap_const_lv1_1);
    not_tmp_40_11_fu_1357_p2 <= (tmp_40_12_reg_1878 xor ap_const_lv1_1);
    not_tmp_40_12_fu_1432_p2 <= (tmp_40_13_fu_1415_p2 xor ap_const_lv1_1);
    not_tmp_40_1_fu_1185_p2 <= (tmp_40_10_reg_1848 xor ap_const_lv1_1);
    not_tmp_40_2_fu_448_p2 <= (tmp_40_2_fu_431_p2 xor ap_const_lv1_1);
    not_tmp_40_3_fu_537_p2 <= (tmp_40_3_reg_1688 xor ap_const_lv1_1);
    not_tmp_40_4_fu_602_p2 <= (tmp_40_4_fu_585_p2 xor ap_const_lv1_1);
    not_tmp_40_5_fu_693_p2 <= (tmp_40_5_reg_1734 xor ap_const_lv1_1);
    not_tmp_40_6_fu_760_p2 <= (tmp_40_6_fu_743_p2 xor ap_const_lv1_1);
    not_tmp_40_7_fu_853_p2 <= (tmp_40_7_reg_1776 xor ap_const_lv1_1);
    not_tmp_40_8_fu_922_p2 <= (tmp_40_8_fu_905_p2 xor ap_const_lv1_1);
    not_tmp_40_9_fu_1017_p2 <= (tmp_40_9_reg_1814 xor ap_const_lv1_1);
    not_tmp_40_s_fu_1088_p2 <= (tmp_40_s_fu_1071_p2 xor ap_const_lv1_1);
    rev4_fu_1512_p2 <= (ult_fu_1506_p2 xor ap_const_lv1_1);
    tmp_10_fu_1213_p13 <= (((((((((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_reg_1704) & not_tmp_40_4_reg_1719) & not_tmp_40_5_reg_1750) & not_tmp_40_6_reg_1763) & not_tmp_40_7_reg_1792) & not_tmp_40_8_reg_1803) & not_tmp_40_9_reg_1830) & not_tmp_40_s_reg_1839) & not_tmp_40_1_fu_1185_p2) & ap_const_lv2_0);
        tmp_114_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_reg_1552),30));

        tmp_115_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_4_1_reg_1558),30));

    tmp_116_fu_394_p3 <= 
        tmp_114_fu_388_p1 when (tmp_40_1_fu_368_p2(0) = '1') else 
        tmp_115_fu_391_p1;
    tmp_117_fu_458_p3 <= (tmp_215_fu_454_p1 & tmp_17_cast_reg_1563);
    tmp_118_fu_471_p3 <= 
        tmp_117_fu_458_p3 when (tmp_40_2_fu_431_p2(0) = '1') else 
        tmp_216_fu_465_p2;
    tmp_119_fu_542_p3 <= (tmp_220_reg_1694 & tmp_18_cast_reg_1570);
    tmp_11_fu_1300_p14 <= ((((((((((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_reg_1704) & not_tmp_40_4_reg_1719) & not_tmp_40_5_reg_1750) & not_tmp_40_6_reg_1763) & not_tmp_40_7_reg_1792) & not_tmp_40_8_reg_1803) & not_tmp_40_9_reg_1830) & not_tmp_40_s_reg_1839) & not_tmp_40_1_fu_1185_p2) & not_tmp_40_10_fu_1258_p2) & ap_const_lv2_0);
    tmp_120_fu_548_p3 <= 
        tmp_119_fu_542_p3 when (tmp_40_3_reg_1688(0) = '1') else 
        tmp_221_reg_1699;
    tmp_121_fu_612_p3 <= (tmp_225_fu_608_p1 & tmp_19_cast_reg_1577);
    tmp_122_fu_625_p3 <= 
        tmp_121_fu_612_p3 when (tmp_40_4_fu_585_p2(0) = '1') else 
        tmp_226_fu_619_p2;
    tmp_123_fu_698_p3 <= (tmp_230_reg_1740 & tmp_20_cast_reg_1584);
    tmp_124_fu_704_p3 <= 
        tmp_123_fu_698_p3 when (tmp_40_5_reg_1734(0) = '1') else 
        tmp_231_reg_1745;
    tmp_125_fu_770_p3 <= (tmp_235_fu_766_p1 & tmp_21_cast_reg_1591);
    tmp_126_fu_783_p3 <= 
        tmp_125_fu_770_p3 when (tmp_40_6_fu_743_p2(0) = '1') else 
        tmp_236_fu_777_p2;
    tmp_127_fu_858_p3 <= (tmp_240_reg_1782 & tmp_22_cast_reg_1598);
    tmp_128_fu_864_p3 <= 
        tmp_127_fu_858_p3 when (tmp_40_7_reg_1776(0) = '1') else 
        tmp_241_reg_1787;
    tmp_129_fu_932_p3 <= (tmp_245_fu_928_p1 & tmp_23_cast_reg_1605);
    tmp_12_fu_1385_p15 <= (((((((((((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_reg_1704) & not_tmp_40_4_reg_1719) & not_tmp_40_5_reg_1750) & not_tmp_40_6_reg_1763) & not_tmp_40_7_reg_1792) & not_tmp_40_8_reg_1803) & not_tmp_40_9_reg_1830) & not_tmp_40_s_reg_1839) & not_tmp_40_1_reg_1864) & not_tmp_40_10_reg_1871) & not_tmp_40_11_fu_1357_p2) & ap_const_lv2_0);
    tmp_130_fu_945_p3 <= 
        tmp_129_fu_932_p3 when (tmp_40_8_fu_905_p2(0) = '1') else 
        tmp_246_fu_939_p2;
    tmp_131_fu_1022_p3 <= (tmp_250_reg_1820 & tmp_24_cast_reg_1612);
    tmp_132_fu_1028_p3 <= 
        tmp_131_fu_1022_p3 when (tmp_40_9_reg_1814(0) = '1') else 
        tmp_251_reg_1825;
    tmp_133_fu_1098_p3 <= (tmp_255_fu_1094_p1 & tmp_25_cast_reg_1619);
    tmp_134_fu_1111_p3 <= 
        tmp_133_fu_1098_p3 when (tmp_40_s_fu_1071_p2(0) = '1') else 
        tmp_256_fu_1105_p2;
    tmp_135_fu_1190_p3 <= (tmp_260_reg_1854 & tmp_26_cast_reg_1626);
    tmp_136_fu_1196_p3 <= 
        tmp_135_fu_1190_p3 when (tmp_40_10_reg_1848(0) = '1') else 
        tmp_261_reg_1859;
    tmp_137_fu_1268_p3 <= (tmp_265_fu_1264_p1 & tmp_27_cast_reg_1633);
    tmp_138_fu_1281_p3 <= 
        tmp_137_fu_1268_p3 when (tmp_40_11_fu_1241_p2(0) = '1') else 
        tmp_266_fu_1275_p2;
    tmp_139_fu_1362_p3 <= (tmp_270_reg_1884 & tmp_28_cast_reg_1640);
    tmp_13_fu_1474_p16 <= ((((((((((((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_reg_1704) & not_tmp_40_4_reg_1719) & not_tmp_40_5_reg_1750) & not_tmp_40_6_reg_1763) & not_tmp_40_7_reg_1792) & not_tmp_40_8_reg_1803) & not_tmp_40_9_reg_1830) & not_tmp_40_s_reg_1839) & not_tmp_40_1_reg_1864) & not_tmp_40_10_reg_1871) & not_tmp_40_11_fu_1357_p2) & not_tmp_40_12_fu_1432_p2) & ap_const_lv2_0);
    tmp_140_fu_1368_p3 <= 
        tmp_139_fu_1362_p3 when (tmp_40_12_reg_1878(0) = '1') else 
        tmp_271_reg_1889;
    tmp_141_fu_1445_p3 <= (tmp_276_fu_1441_p1 & tmp_29_cast_reg_1647);
    tmp_142_fu_1458_p3 <= 
        tmp_141_fu_1445_p3 when (tmp_40_13_fu_1415_p2(0) = '1') else 
        tmp_277_fu_1452_p2;
    tmp_16_cast_fu_188_p4 <= value_r(29 downto 28);
    tmp_1_fu_1130_p12 <= ((((((((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_reg_1704) & not_tmp_40_4_reg_1719) & not_tmp_40_5_reg_1750) & not_tmp_40_6_reg_1763) & not_tmp_40_7_reg_1792) & not_tmp_40_8_reg_1803) & not_tmp_40_9_fu_1017_p2) & not_tmp_40_s_fu_1088_p2) & ap_const_lv2_0);
    tmp_212_fu_402_p1 <= tmp_116_fu_394_p3(28 - 1 downto 0);
    tmp_213_fu_437_p3 <= (tmp_212_fu_402_p1 & tmp_17_cast_reg_1563);
    tmp_214_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_2_fu_421_p2),30));
    tmp_215_fu_454_p1 <= tmp_116_fu_394_p3(28 - 1 downto 0);
    tmp_216_fu_465_p2 <= std_logic_vector(unsigned(tmp_213_fu_437_p3) - unsigned(tmp_214_fu_444_p1));
    tmp_217_fu_479_p1 <= tmp_118_fu_471_p3(28 - 1 downto 0);
    tmp_218_fu_516_p3 <= (tmp_217_fu_479_p1 & tmp_18_cast_reg_1570);
    tmp_219_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_3_fu_500_p2),30));
    tmp_220_fu_527_p1 <= tmp_118_fu_471_p3(28 - 1 downto 0);
    tmp_221_fu_531_p2 <= std_logic_vector(unsigned(tmp_218_fu_516_p3) - unsigned(tmp_219_fu_523_p1));
    tmp_222_fu_554_p1 <= tmp_120_fu_548_p3(28 - 1 downto 0);
    tmp_223_fu_591_p3 <= (tmp_222_fu_554_p1 & tmp_19_cast_reg_1577);
    tmp_224_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_4_fu_575_p2),30));
    tmp_225_fu_608_p1 <= tmp_120_fu_548_p3(28 - 1 downto 0);
    tmp_226_fu_619_p2 <= std_logic_vector(unsigned(tmp_223_fu_591_p3) - unsigned(tmp_224_fu_598_p1));
    tmp_227_fu_633_p1 <= tmp_122_fu_625_p3(28 - 1 downto 0);
    tmp_228_fu_672_p3 <= (tmp_227_fu_633_p1 & tmp_20_cast_reg_1584);
    tmp_229_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_5_fu_656_p2),30));
    tmp_230_fu_683_p1 <= tmp_122_fu_625_p3(28 - 1 downto 0);
    tmp_231_fu_687_p2 <= std_logic_vector(unsigned(tmp_228_fu_672_p3) - unsigned(tmp_229_fu_679_p1));
    tmp_232_fu_710_p1 <= tmp_124_fu_704_p3(28 - 1 downto 0);
    tmp_233_fu_749_p3 <= (tmp_232_fu_710_p1 & tmp_21_cast_reg_1591);
    tmp_234_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_6_fu_733_p2),30));
    tmp_235_fu_766_p1 <= tmp_124_fu_704_p3(28 - 1 downto 0);
    tmp_236_fu_777_p2 <= std_logic_vector(unsigned(tmp_233_fu_749_p3) - unsigned(tmp_234_fu_756_p1));
    tmp_237_fu_791_p1 <= tmp_126_fu_783_p3(28 - 1 downto 0);
    tmp_238_fu_832_p3 <= (tmp_237_fu_791_p1 & tmp_22_cast_reg_1598);
    tmp_239_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_7_fu_816_p2),30));
    tmp_240_fu_843_p1 <= tmp_126_fu_783_p3(28 - 1 downto 0);
    tmp_241_fu_847_p2 <= std_logic_vector(unsigned(tmp_238_fu_832_p3) - unsigned(tmp_239_fu_839_p1));
    tmp_242_fu_870_p1 <= tmp_128_fu_864_p3(28 - 1 downto 0);
    tmp_243_fu_911_p3 <= (tmp_242_fu_870_p1 & tmp_23_cast_reg_1605);
    tmp_244_fu_918_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_8_fu_895_p2),30));
    tmp_245_fu_928_p1 <= tmp_128_fu_864_p3(28 - 1 downto 0);
    tmp_246_fu_939_p2 <= std_logic_vector(unsigned(tmp_243_fu_911_p3) - unsigned(tmp_244_fu_918_p1));
    tmp_247_fu_953_p1 <= tmp_130_fu_945_p3(28 - 1 downto 0);
    tmp_248_fu_996_p3 <= (tmp_247_fu_953_p1 & tmp_24_cast_reg_1612);
    tmp_249_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_9_fu_980_p2),30));
    tmp_250_fu_1007_p1 <= tmp_130_fu_945_p3(28 - 1 downto 0);
    tmp_251_fu_1011_p2 <= std_logic_vector(unsigned(tmp_248_fu_996_p3) - unsigned(tmp_249_fu_1003_p1));
    tmp_252_fu_1034_p1 <= tmp_132_fu_1028_p3(28 - 1 downto 0);
    tmp_253_fu_1077_p3 <= (tmp_252_fu_1034_p1 & tmp_25_cast_reg_1619);
    tmp_254_fu_1084_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_s_fu_1061_p2),30));
    tmp_255_fu_1094_p1 <= tmp_132_fu_1028_p3(28 - 1 downto 0);
    tmp_256_fu_1105_p2 <= std_logic_vector(unsigned(tmp_253_fu_1077_p3) - unsigned(tmp_254_fu_1084_p1));
    tmp_257_fu_1119_p1 <= tmp_134_fu_1111_p3(28 - 1 downto 0);
    tmp_258_fu_1164_p3 <= (tmp_257_fu_1119_p1 & tmp_26_cast_reg_1626);
    tmp_259_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_1_fu_1148_p2),30));
    tmp_260_fu_1175_p1 <= tmp_134_fu_1111_p3(28 - 1 downto 0);
    tmp_261_fu_1179_p2 <= std_logic_vector(unsigned(tmp_258_fu_1164_p3) - unsigned(tmp_259_fu_1171_p1));
    tmp_262_fu_1202_p1 <= tmp_136_fu_1196_p3(28 - 1 downto 0);
    tmp_263_fu_1247_p3 <= (tmp_262_fu_1202_p1 & tmp_27_cast_reg_1633);
    tmp_264_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_10_fu_1231_p2),30));
    tmp_265_fu_1264_p1 <= tmp_136_fu_1196_p3(28 - 1 downto 0);
    tmp_266_fu_1275_p2 <= std_logic_vector(unsigned(tmp_263_fu_1247_p3) - unsigned(tmp_264_fu_1254_p1));
    tmp_267_fu_1289_p1 <= tmp_138_fu_1281_p3(28 - 1 downto 0);
    tmp_268_fu_1336_p3 <= (tmp_267_fu_1289_p1 & tmp_28_cast_reg_1640);
    tmp_269_fu_1343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_11_fu_1320_p2),30));
    tmp_270_fu_1347_p1 <= tmp_138_fu_1281_p3(28 - 1 downto 0);
    tmp_271_fu_1351_p2 <= std_logic_vector(unsigned(tmp_268_fu_1336_p3) - unsigned(tmp_269_fu_1343_p1));
    tmp_272_fu_1374_p1 <= tmp_140_fu_1368_p3(28 - 1 downto 0);
    tmp_273_fu_1421_p3 <= (tmp_272_fu_1374_p1 & tmp_29_cast_reg_1647);
    tmp_274_fu_1428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_12_fu_1405_p2),30));
    tmp_275_fu_1438_p1 <= value_r(2 - 1 downto 0);
    tmp_276_fu_1441_p1 <= tmp_140_fu_1368_p3(28 - 1 downto 0);
    tmp_277_fu_1452_p2 <= std_logic_vector(unsigned(tmp_273_fu_1421_p3) - unsigned(tmp_274_fu_1428_p1));
    tmp_2_fu_413_p3 <= (a_1_1_fu_380_p3 & ap_const_lv2_0);
    tmp_30_fu_198_p3 <= (c_1_fu_180_p3 & tmp_16_cast_fu_188_p4);
    tmp_3_fu_490_p4 <= ((a_1_1_fu_380_p3 & not_tmp_40_2_fu_448_p2) & ap_const_lv2_0);
    tmp_40_10_fu_1158_p2 <= "1" when (unsigned(c_3_1_fu_1123_p3) < unsigned(b_10_cast_fu_1154_p1)) else "0";
    tmp_40_11_fu_1241_p2 <= "1" when (unsigned(c_3_10_fu_1206_p3) < unsigned(b_11_cast_fu_1237_p1)) else "0";
    tmp_40_12_fu_1330_p2 <= "1" when (unsigned(c_3_11_fu_1293_p3) < unsigned(b_12_cast_fu_1326_p1)) else "0";
    tmp_40_13_fu_1415_p2 <= "1" when (unsigned(c_3_12_fu_1378_p3) < unsigned(b_13_cast_fu_1411_p1)) else "0";
    tmp_40_1_fu_368_p2 <= "1" when (unsigned(tmp_30_reg_1552) < unsigned(b_1_cast_cast_fu_361_p3)) else "0";
    tmp_40_2_fu_431_p2 <= "1" when (unsigned(c_3_2_fu_406_p3) < unsigned(b_2_cast_fu_427_p1)) else "0";
    tmp_40_3_fu_510_p2 <= "1" when (unsigned(c_3_3_fu_483_p3) < unsigned(b_3_cast_fu_506_p1)) else "0";
    tmp_40_4_fu_585_p2 <= "1" when (unsigned(c_3_4_fu_558_p3) < unsigned(b_4_cast_fu_581_p1)) else "0";
    tmp_40_5_fu_666_p2 <= "1" when (unsigned(c_3_5_fu_637_p3) < unsigned(b_5_cast_fu_662_p1)) else "0";
    tmp_40_6_fu_743_p2 <= "1" when (unsigned(c_3_6_fu_714_p3) < unsigned(b_6_cast_fu_739_p1)) else "0";
    tmp_40_7_fu_826_p2 <= "1" when (unsigned(c_3_7_fu_795_p3) < unsigned(b_7_cast_fu_822_p1)) else "0";
    tmp_40_8_fu_905_p2 <= "1" when (unsigned(c_3_8_fu_874_p3) < unsigned(b_8_cast_fu_901_p1)) else "0";
    tmp_40_9_fu_990_p2 <= "1" when (unsigned(c_3_9_fu_957_p3) < unsigned(b_9_cast_fu_986_p1)) else "0";
    tmp_40_s_fu_1071_p2 <= "1" when (unsigned(c_3_s_fu_1038_p3) < unsigned(b_cast_fu_1067_p1)) else "0";
    tmp_4_fu_565_p5 <= (((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_fu_537_p2) & ap_const_lv2_0);
    tmp_5_fu_644_p6 <= ((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_fu_537_p2) & not_tmp_40_4_fu_602_p2) & ap_const_lv2_0);
    tmp_6_fu_721_p7 <= (((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_reg_1704) & not_tmp_40_4_reg_1719) & not_tmp_40_5_fu_693_p2) & ap_const_lv2_0);
    tmp_7_fu_802_p8 <= ((((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_reg_1704) & not_tmp_40_4_reg_1719) & not_tmp_40_5_fu_693_p2) & not_tmp_40_6_fu_760_p2) & ap_const_lv2_0);
    tmp_8_fu_881_p9 <= (((((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_reg_1704) & not_tmp_40_4_reg_1719) & not_tmp_40_5_reg_1750) & not_tmp_40_6_reg_1763) & not_tmp_40_7_fu_853_p2) & ap_const_lv2_0);
    tmp_9_fu_964_p10 <= ((((((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_reg_1704) & not_tmp_40_4_reg_1719) & not_tmp_40_5_reg_1750) & not_tmp_40_6_reg_1763) & not_tmp_40_7_fu_853_p2) & not_tmp_40_8_fu_922_p2) & ap_const_lv2_0);
    tmp_cast_fu_164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_154_p4),3));
    tmp_fu_154_p4 <= value_r(31 downto 30);
    tmp_s_21_fu_1045_p11 <= (((((((((a_1_1_reg_1654 & not_tmp_40_2_reg_1671) & not_tmp_40_3_reg_1704) & not_tmp_40_4_reg_1719) & not_tmp_40_5_reg_1750) & not_tmp_40_6_reg_1763) & not_tmp_40_7_reg_1792) & not_tmp_40_8_reg_1803) & not_tmp_40_9_fu_1017_p2) & ap_const_lv2_0);
    tmp_s_fu_168_p2 <= "1" when (tmp_fu_154_p4 = ap_const_lv2_0) else "0";
    ult_fu_1506_p2 <= "1" when (unsigned(c_3_13_fu_1466_p3) < unsigned(b_14_cast_fu_1502_p1)) else "0";
end behav;
