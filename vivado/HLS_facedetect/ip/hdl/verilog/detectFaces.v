// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="detectFaces,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.634000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=246,HLS_SYN_DSP=70,HLS_SYN_FF=14594,HLS_SYN_LUT=27857,HLS_VERSION=2018_3}" *)

module detectFaces (
        ap_clk,
        ap_rst_n,
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 36'd1;
parameter    ap_ST_fsm_state2 = 36'd2;
parameter    ap_ST_fsm_state3 = 36'd4;
parameter    ap_ST_fsm_state4 = 36'd8;
parameter    ap_ST_fsm_state5 = 36'd16;
parameter    ap_ST_fsm_state6 = 36'd32;
parameter    ap_ST_fsm_state7 = 36'd64;
parameter    ap_ST_fsm_state8 = 36'd128;
parameter    ap_ST_fsm_state9 = 36'd256;
parameter    ap_ST_fsm_state10 = 36'd512;
parameter    ap_ST_fsm_state11 = 36'd1024;
parameter    ap_ST_fsm_state12 = 36'd2048;
parameter    ap_ST_fsm_state13 = 36'd4096;
parameter    ap_ST_fsm_state14 = 36'd8192;
parameter    ap_ST_fsm_state15 = 36'd16384;
parameter    ap_ST_fsm_state16 = 36'd32768;
parameter    ap_ST_fsm_state17 = 36'd65536;
parameter    ap_ST_fsm_state18 = 36'd131072;
parameter    ap_ST_fsm_state19 = 36'd262144;
parameter    ap_ST_fsm_state20 = 36'd524288;
parameter    ap_ST_fsm_state21 = 36'd1048576;
parameter    ap_ST_fsm_state22 = 36'd2097152;
parameter    ap_ST_fsm_state23 = 36'd4194304;
parameter    ap_ST_fsm_state24 = 36'd8388608;
parameter    ap_ST_fsm_state25 = 36'd16777216;
parameter    ap_ST_fsm_state26 = 36'd33554432;
parameter    ap_ST_fsm_state27 = 36'd67108864;
parameter    ap_ST_fsm_state28 = 36'd134217728;
parameter    ap_ST_fsm_state29 = 36'd268435456;
parameter    ap_ST_fsm_state30 = 36'd536870912;
parameter    ap_ST_fsm_state31 = 36'd1073741824;
parameter    ap_ST_fsm_state32 = 36'd2147483648;
parameter    ap_ST_fsm_state33 = 36'd4294967296;
parameter    ap_ST_fsm_state34 = 36'd8589934592;
parameter    ap_ST_fsm_state35 = 36'd17179869184;
parameter    ap_ST_fsm_state36 = 36'd34359738368;
parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 12;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1:0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [8:0] inData_address0;
reg    inData_ce0;
wire   [7:0] inData_q0;
wire   [6:0] result_x_address0;
reg    result_x_ce0;
reg    result_x_we0;
wire   [6:0] result_y_address0;
reg    result_y_ce0;
reg    result_y_we0;
wire   [6:0] result_w_address0;
reg    result_w_ce0;
reg    result_w_we0;
wire   [6:0] result_h_address0;
reg    result_h_ce0;
reg    result_h_we0;
reg    result_size_ap_vld;
reg    finished_ap_vld;
reg   [31:0] counter;
reg   [16:0] Data_address0;
reg    Data_ce0;
reg    Data_we0;
wire   [7:0] Data_q0;
reg   [31:0] counter_load_reg_1275;
wire   [0:0] tmp_fu_644_p2;
reg   [0:0] tmp_reg_1281;
wire   [17:0] tmp_149_fu_674_p2;
reg   [17:0] tmp_149_reg_1285;
wire   [8:0] j_2_fu_686_p2;
reg   [8:0] j_2_reg_1293;
wire    ap_CS_fsm_state2;
wire   [17:0] tmp_150_fu_701_p2;
reg   [17:0] tmp_150_reg_1298;
wire   [0:0] exitcond1_fu_680_p2;
wire   [31:0] tmp_s_fu_709_p2;
wire   [7:0] tmp_41_fu_720_p2;
wire   [0:0] tmp_39_fu_714_p2;
wire   [31:0] grp_fu_610_p2;
reg   [31:0] x_assign_2_reg_1321;
wire    ap_CS_fsm_state19;
wire   [31:0] grp_fu_616_p2;
reg   [31:0] x_assign_3_reg_1327;
wire   [7:0] tmp_V_5_fu_733_p4;
reg   [7:0] tmp_V_5_reg_1333;
wire    ap_CS_fsm_state20;
wire   [22:0] tmp_V_6_fu_743_p1;
reg   [22:0] tmp_V_6_reg_1339;
wire   [7:0] tmp_V_7_fu_774_p4;
reg   [7:0] tmp_V_7_reg_1344;
wire   [22:0] tmp_V_8_fu_784_p1;
reg   [22:0] tmp_V_8_reg_1350;
reg   [0:0] p_Result_2_reg_1358;
wire   [0:0] or_cond_fu_812_p2;
reg   [0:0] p_Result_3_reg_1363;
wire   [31:0] grp_fu_603_p2;
reg   [31:0] value_assign_reg_1368;
wire    ap_CS_fsm_state23;
wire   [63:0] tmp_i_fu_622_p1;
reg   [63:0] tmp_i_reg_1375;
wire    ap_CS_fsm_state24;
wire   [63:0] tmp_21_i_fu_875_p3;
reg   [63:0] tmp_21_i_reg_1380;
wire   [63:0] grp_fu_636_p2;
reg   [63:0] x_assign_reg_1385;
wire    ap_CS_fsm_state29;
wire   [31:0] p_Val2_28_fu_976_p3;
reg   [31:0] p_Val2_28_reg_1390;
wire   [31:0] p_Val2_30_fu_1077_p3;
reg   [31:0] p_Val2_30_reg_1396;
reg   [0:0] p_Result_s_reg_1402;
wire    ap_CS_fsm_state30;
wire   [31:0] p_Val2_26_fu_1206_p3;
reg   [31:0] p_Val2_26_reg_1407;
wire   [31:0] p_Val2_29_fu_1219_p3;
reg   [31:0] p_Val2_29_reg_1413;
wire   [31:0] p_Val2_31_fu_1231_p3;
reg   [31:0] p_Val2_31_reg_1419;
wire   [31:0] p_Val2_27_fu_1243_p3;
reg   [31:0] p_Val2_27_reg_1425;
wire    ap_CS_fsm_state31;
wire    grp_imageScaler_fu_594_ap_ready;
wire    grp_imageScaler_fu_594_ap_done;
wire   [31:0] grp_processImage_fu_497_ap_return;
wire    ap_CS_fsm_state33;
wire    grp_processImage_fu_497_ap_ready;
wire    grp_processImage_fu_497_ap_done;
wire   [6:0] i_3_fu_1255_p2;
reg   [6:0] i_3_reg_1444;
wire    ap_CS_fsm_state34;
wire   [63:0] tmp_53_fu_1261_p1;
reg   [63:0] tmp_53_reg_1449;
wire   [0:0] exitcond_fu_1249_p2;
reg   [6:0] result_x_Scale_address0;
reg    result_x_Scale_ce0;
reg    result_x_Scale_we0;
wire   [31:0] result_x_Scale_q0;
reg   [6:0] result_y_Scale_address0;
reg    result_y_Scale_ce0;
reg    result_y_Scale_we0;
wire   [31:0] result_y_Scale_q0;
reg   [6:0] result_w_Scale_address0;
reg    result_w_Scale_ce0;
reg    result_w_Scale_we0;
wire   [31:0] result_w_Scale_q0;
reg   [6:0] result_h_Scale_address0;
reg    result_h_Scale_ce0;
reg    result_h_Scale_we0;
wire   [31:0] result_h_Scale_q0;
reg   [16:0] IMG1_data_address0;
reg    IMG1_data_ce0;
reg    IMG1_data_we0;
wire   [7:0] IMG1_data_q0;
reg    IMG1_data_ce1;
wire   [7:0] IMG1_data_q1;
wire    grp_processImage_fu_497_ap_start;
wire    grp_processImage_fu_497_ap_idle;
wire   [6:0] grp_processImage_fu_497_AllCandidates_x_address0;
wire    grp_processImage_fu_497_AllCandidates_x_ce0;
wire    grp_processImage_fu_497_AllCandidates_x_we0;
wire   [31:0] grp_processImage_fu_497_AllCandidates_x_d0;
wire   [6:0] grp_processImage_fu_497_AllCandidates_y_address0;
wire    grp_processImage_fu_497_AllCandidates_y_ce0;
wire    grp_processImage_fu_497_AllCandidates_y_we0;
wire   [31:0] grp_processImage_fu_497_AllCandidates_y_d0;
wire   [6:0] grp_processImage_fu_497_AllCandidates_w_address0;
wire    grp_processImage_fu_497_AllCandidates_w_ce0;
wire    grp_processImage_fu_497_AllCandidates_w_we0;
wire   [31:0] grp_processImage_fu_497_AllCandidates_w_d0;
wire   [6:0] grp_processImage_fu_497_AllCandidates_h_address0;
wire    grp_processImage_fu_497_AllCandidates_h_ce0;
wire    grp_processImage_fu_497_AllCandidates_h_we0;
wire   [31:0] grp_processImage_fu_497_AllCandidates_h_d0;
wire   [16:0] grp_processImage_fu_497_IMG1_data_address0;
wire    grp_processImage_fu_497_IMG1_data_ce0;
wire   [16:0] grp_processImage_fu_497_IMG1_data_address1;
wire    grp_processImage_fu_497_IMG1_data_ce1;
wire    grp_imageScaler_fu_594_ap_start;
wire    grp_imageScaler_fu_594_ap_idle;
wire   [16:0] grp_imageScaler_fu_594_Data_address0;
wire    grp_imageScaler_fu_594_Data_ce0;
wire   [16:0] grp_imageScaler_fu_594_IMG1_data_address0;
wire    grp_imageScaler_fu_594_IMG1_data_ce0;
wire    grp_imageScaler_fu_594_IMG1_data_we0;
wire   [7:0] grp_imageScaler_fu_594_IMG1_data_d0;
reg   [8:0] j_reg_427;
wire    ap_CS_fsm_state3;
reg   [31:0] factor_reg_438;
reg   [31:0] res_size_Scale_reg_450;
reg   [6:0] i_reg_463;
wire    ap_CS_fsm_state35;
reg   [7:0] storemerge_reg_474;
reg   [31:0] counter_new_reg_486;
reg    grp_processImage_fu_497_ap_start_reg;
wire    ap_CS_fsm_state32;
reg    grp_imageScaler_fu_594_ap_start_reg;
wire   [63:0] tmp_40_fu_692_p1;
wire  signed [63:0] tmp_185_cast_fu_726_p1;
wire    ap_CS_fsm_state36;
reg   [31:0] grp_fu_603_p1;
wire    ap_CS_fsm_state4;
reg   [31:0] grp_fu_625_p0;
reg   [31:0] grp_fu_625_p1;
wire    ap_CS_fsm_state25;
wire   [9:0] tmp_281_fu_650_p1;
wire   [11:0] tmp_282_fu_662_p1;
wire   [17:0] p_shl_cast_fu_654_p3;
wire   [17:0] p_shl2_cast_fu_666_p3;
wire   [17:0] tmp_40_cast_fu_697_p1;
wire   [7:0] tmp_283_fu_706_p1;
wire   [31:0] p_Val2_16_fu_730_p1;
wire   [0:0] notrhs_fu_753_p2;
wire   [0:0] notlhs_fu_747_p2;
wire   [0:0] tmp_44_fu_759_p2;
wire   [0:0] grp_fu_625_p2;
wire   [31:0] p_Val2_21_fu_771_p1;
wire   [0:0] notrhs1_fu_794_p2;
wire   [0:0] notlhs1_fu_788_p2;
wire   [0:0] tmp_49_fu_800_p2;
wire   [0:0] tmp_50_fu_630_p2;
wire   [0:0] tmp_46_fu_765_p2;
wire   [0:0] tmp_51_fu_806_p2;
wire   [31:0] value_assign_to_int_fu_834_p1;
wire   [7:0] tmp_52_fu_837_p4;
wire   [22:0] tmp_286_fu_847_p1;
wire   [0:0] notrhs2_fu_857_p2;
wire   [0:0] notlhs2_fu_851_p2;
wire   [0:0] tmp_55_fu_863_p2;
wire   [0:0] tmp_57_fu_869_p2;
wire   [24:0] mantissa_V_2_fu_883_p4;
wire   [8:0] tmp_i_i_i_i2_cast4_fu_896_p1;
wire   [8:0] sh_assign_8_fu_899_p2;
wire   [7:0] tmp_i_i_i_fu_913_p2;
wire   [0:0] isNeg_2_fu_905_p3;
wire  signed [8:0] tmp_i_i_i_cast_fu_918_p1;
wire  signed [8:0] ush_2_fu_922_p3;
wire  signed [31:0] sh_assign_10_cast_fu_930_p1;
wire  signed [24:0] sh_assign_10_cast_ca_fu_934_p1;
wire   [78:0] mantissa_V_6_cast5_fu_892_p1;
wire   [78:0] tmp_i_i_i_31_fu_938_p1;
wire   [24:0] r_V_5_fu_942_p2;
wire   [0:0] tmp_293_fu_954_p3;
wire   [78:0] r_V_6_fu_948_p2;
wire   [31:0] tmp_153_fu_962_p1;
wire   [31:0] tmp_154_fu_966_p4;
wire   [24:0] mantissa_V_3_fu_984_p4;
wire   [8:0] tmp_i_i_i_i3_cast2_fu_997_p1;
wire   [8:0] sh_assign_s_fu_1000_p2;
wire   [7:0] tmp_i_i_i1_fu_1014_p2;
wire   [0:0] isNeg_3_fu_1006_p3;
wire  signed [8:0] tmp_i_i_i1_cast_fu_1019_p1;
wire  signed [8:0] ush_3_fu_1023_p3;
wire  signed [31:0] sh_assign_13_cast_fu_1031_p1;
wire  signed [24:0] sh_assign_13_cast_ca_fu_1035_p1;
wire   [78:0] mantissa_V_8_cast3_fu_993_p1;
wire   [78:0] tmp_i_i_i1_32_fu_1039_p1;
wire   [24:0] r_V_7_fu_1043_p2;
wire   [0:0] tmp_296_fu_1055_p3;
wire   [78:0] r_V_8_fu_1049_p2;
wire   [31:0] tmp_155_fu_1063_p1;
wire   [31:0] tmp_156_fu_1067_p4;
wire   [63:0] p_Val2_s_fu_1085_p1;
wire   [51:0] tmp_V_4_fu_1106_p1;
wire   [53:0] mantissa_V_fu_1110_p4;
wire   [10:0] tmp_V_fu_1096_p4;
wire   [11:0] tmp_i_i_i_i_i_cast6_fu_1124_p1;
wire   [11:0] sh_assign_fu_1128_p2;
wire   [10:0] tmp_i_i_i_i_fu_1142_p2;
wire   [0:0] isNeg_fu_1134_p3;
wire  signed [11:0] tmp_i_i_i_i_cast_fu_1148_p1;
wire   [11:0] ush_fu_1152_p3;
wire  signed [31:0] sh_assign_7_cast_fu_1160_p1;
wire   [53:0] tmp_i_i_i_i_cast_30_fu_1168_p1;
wire   [136:0] mantissa_V_4_cast_fu_1120_p1;
wire   [136:0] tmp_i_i_i_i_29_fu_1164_p1;
wire   [53:0] r_V_fu_1172_p2;
wire   [0:0] tmp_290_fu_1184_p3;
wire   [136:0] r_V_4_fu_1178_p2;
wire   [31:0] tmp_151_fu_1192_p1;
wire   [31:0] tmp_152_fu_1196_p4;
wire   [31:0] result_V_6_fu_1214_p2;
wire   [31:0] result_V_8_fu_1226_p2;
wire   [31:0] result_V_4_fu_1238_p2;
reg    grp_fu_603_ce;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
reg   [4:0] grp_fu_625_opcode;
reg   [35:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'd1;
#0 counter = 32'd0;
#0 grp_processImage_fu_497_ap_start_reg = 1'b0;
#0 grp_imageScaler_fu_594_ap_start_reg = 1'b0;
end

detectFaces_Data #(
    .DataWidth( 8 ),
    .AddressRange( 76800 ),
    .AddressWidth( 17 ))
Data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Data_address0),
    .ce0(Data_ce0),
    .we0(Data_we0),
    .d0(inData_q0),
    .q0(Data_q0)
);

detectFaces_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
detectFaces_CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .inData_address0(inData_address0),
    .inData_ce0(inData_ce0),
    .inData_q0(inData_q0),
    .result_x_address0(result_x_address0),
    .result_x_ce0(result_x_ce0),
    .result_x_we0(result_x_we0),
    .result_x_d0(result_x_Scale_q0),
    .result_y_address0(result_y_address0),
    .result_y_ce0(result_y_ce0),
    .result_y_we0(result_y_we0),
    .result_y_d0(result_y_Scale_q0),
    .result_w_address0(result_w_address0),
    .result_w_ce0(result_w_ce0),
    .result_w_we0(result_w_we0),
    .result_w_d0(result_w_Scale_q0),
    .result_h_address0(result_h_address0),
    .result_h_ce0(result_h_ce0),
    .result_h_we0(result_h_we0),
    .result_h_d0(result_h_Scale_q0),
    .result_size(res_size_Scale_reg_450),
    .result_size_ap_vld(result_size_ap_vld),
    .finished(storemerge_reg_474),
    .finished_ap_vld(finished_ap_vld)
);

detectFaces_resulbbk #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
result_x_Scale_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(result_x_Scale_address0),
    .ce0(result_x_Scale_ce0),
    .we0(result_x_Scale_we0),
    .d0(grp_processImage_fu_497_AllCandidates_x_d0),
    .q0(result_x_Scale_q0)
);

detectFaces_resulbbk #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
result_y_Scale_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(result_y_Scale_address0),
    .ce0(result_y_Scale_ce0),
    .we0(result_y_Scale_we0),
    .d0(grp_processImage_fu_497_AllCandidates_y_d0),
    .q0(result_y_Scale_q0)
);

detectFaces_resulbbk #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
result_w_Scale_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(result_w_Scale_address0),
    .ce0(result_w_Scale_ce0),
    .we0(result_w_Scale_we0),
    .d0(grp_processImage_fu_497_AllCandidates_w_d0),
    .q0(result_w_Scale_q0)
);

detectFaces_resulbbk #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
result_h_Scale_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(result_h_Scale_address0),
    .ce0(result_h_Scale_ce0),
    .we0(result_h_Scale_we0),
    .d0(grp_processImage_fu_497_AllCandidates_h_d0),
    .q0(result_h_Scale_q0)
);

detectFaces_IMG1_bfk #(
    .DataWidth( 8 ),
    .AddressRange( 76800 ),
    .AddressWidth( 17 ))
IMG1_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(IMG1_data_address0),
    .ce0(IMG1_data_ce0),
    .we0(IMG1_data_we0),
    .d0(grp_imageScaler_fu_594_IMG1_data_d0),
    .q0(IMG1_data_q0),
    .address1(grp_processImage_fu_497_IMG1_data_address1),
    .ce1(IMG1_data_ce1),
    .q1(IMG1_data_q1)
);

processImage grp_processImage_fu_497(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_processImage_fu_497_ap_start),
    .ap_done(grp_processImage_fu_497_ap_done),
    .ap_idle(grp_processImage_fu_497_ap_idle),
    .ap_ready(grp_processImage_fu_497_ap_ready),
    .factor(factor_reg_438),
    .sum_row(p_Val2_31_reg_1419),
    .sum_col(p_Val2_29_reg_1413),
    .AllCandidates_x_address0(grp_processImage_fu_497_AllCandidates_x_address0),
    .AllCandidates_x_ce0(grp_processImage_fu_497_AllCandidates_x_ce0),
    .AllCandidates_x_we0(grp_processImage_fu_497_AllCandidates_x_we0),
    .AllCandidates_x_d0(grp_processImage_fu_497_AllCandidates_x_d0),
    .AllCandidates_y_address0(grp_processImage_fu_497_AllCandidates_y_address0),
    .AllCandidates_y_ce0(grp_processImage_fu_497_AllCandidates_y_ce0),
    .AllCandidates_y_we0(grp_processImage_fu_497_AllCandidates_y_we0),
    .AllCandidates_y_d0(grp_processImage_fu_497_AllCandidates_y_d0),
    .AllCandidates_w_address0(grp_processImage_fu_497_AllCandidates_w_address0),
    .AllCandidates_w_ce0(grp_processImage_fu_497_AllCandidates_w_ce0),
    .AllCandidates_w_we0(grp_processImage_fu_497_AllCandidates_w_we0),
    .AllCandidates_w_d0(grp_processImage_fu_497_AllCandidates_w_d0),
    .AllCandidates_h_address0(grp_processImage_fu_497_AllCandidates_h_address0),
    .AllCandidates_h_ce0(grp_processImage_fu_497_AllCandidates_h_ce0),
    .AllCandidates_h_we0(grp_processImage_fu_497_AllCandidates_h_we0),
    .AllCandidates_h_d0(grp_processImage_fu_497_AllCandidates_h_d0),
    .AllCandidates_size_r(res_size_Scale_reg_450),
    .IMG1_data_address0(grp_processImage_fu_497_IMG1_data_address0),
    .IMG1_data_ce0(grp_processImage_fu_497_IMG1_data_ce0),
    .IMG1_data_q0(IMG1_data_q0),
    .IMG1_data_address1(grp_processImage_fu_497_IMG1_data_address1),
    .IMG1_data_ce1(grp_processImage_fu_497_IMG1_data_ce1),
    .IMG1_data_q1(IMG1_data_q1),
    .winSize_width(p_Val2_27_reg_1425),
    .winSize_height(p_Val2_27_reg_1425),
    .ap_return(grp_processImage_fu_497_ap_return)
);

imageScaler grp_imageScaler_fu_594(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_imageScaler_fu_594_ap_start),
    .ap_done(grp_imageScaler_fu_594_ap_done),
    .ap_idle(grp_imageScaler_fu_594_ap_idle),
    .ap_ready(grp_imageScaler_fu_594_ap_ready),
    .Data_address0(grp_imageScaler_fu_594_Data_address0),
    .Data_ce0(grp_imageScaler_fu_594_Data_ce0),
    .Data_q0(Data_q0),
    .dest_height(p_Val2_31_reg_1419),
    .dest_width(p_Val2_29_reg_1413),
    .IMG1_data_address0(grp_imageScaler_fu_594_IMG1_data_address0),
    .IMG1_data_ce0(grp_imageScaler_fu_594_IMG1_data_ce0),
    .IMG1_data_we0(grp_imageScaler_fu_594_IMG1_data_we0),
    .IMG1_data_d0(grp_imageScaler_fu_594_IMG1_data_d0)
);

detectFaces_fmul_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
detectFaces_fmul_6jw_U92(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(factor_reg_438),
    .din1(grp_fu_603_p1),
    .ce(grp_fu_603_ce),
    .dout(grp_fu_603_p2)
);

detectFaces_fdiv_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
detectFaces_fdiv_bgk_U93(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(32'd1134559232),
    .din1(factor_reg_438),
    .ce(1'b1),
    .dout(grp_fu_610_p2)
);

detectFaces_fdiv_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
detectFaces_fdiv_bgk_U94(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(32'd1131413504),
    .din1(factor_reg_438),
    .ce(1'b1),
    .dout(grp_fu_616_p2)
);

detectFaces_fpext8jQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
detectFaces_fpext8jQ_U95(
    .din0(value_assign_reg_1368),
    .dout(tmp_i_fu_622_p1)
);

detectFaces_fcmp_9j0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
detectFaces_fcmp_9j0_U96(
    .din0(grp_fu_625_p0),
    .din1(grp_fu_625_p1),
    .opcode(grp_fu_625_opcode),
    .dout(grp_fu_625_p2)
);

detectFaces_fcmp_9j0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
detectFaces_fcmp_9j0_U97(
    .din0(x_assign_3_reg_1327),
    .din1(32'd1103626240),
    .opcode(5'd2),
    .dout(tmp_50_fu_630_p2)
);

detectFaces_dadd_bak #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
detectFaces_dadd_bak_U98(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_i_reg_1375),
    .din1(tmp_21_i_reg_1380),
    .ce(1'b1),
    .dout(grp_fu_636_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_imageScaler_fu_594_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state30)) begin
            grp_imageScaler_fu_594_ap_start_reg <= 1'b1;
        end else if ((grp_imageScaler_fu_594_ap_ready == 1'b1)) begin
            grp_imageScaler_fu_594_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_processImage_fu_497_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state32)) begin
            grp_processImage_fu_497_ap_start_reg <= 1'b1;
        end else if ((grp_processImage_fu_497_ap_ready == 1'b1)) begin
            grp_processImage_fu_497_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_39_fu_714_p2 == 1'd1) & (exitcond1_fu_680_p2 == 1'd1) & (tmp_reg_1281 == 1'd1))) begin
        counter_new_reg_486 <= tmp_s_fu_709_p2;
    end else if (((1'b1 == ap_CS_fsm_state34) & (exitcond_fu_1249_p2 == 1'd1))) begin
        counter_new_reg_486 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_processImage_fu_497_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        factor_reg_438 <= grp_fu_603_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & ((tmp_reg_1281 == 1'd0) | ((tmp_39_fu_714_p2 == 1'd0) & (exitcond1_fu_680_p2 == 1'd1))))) begin
        factor_reg_438 <= 32'd1066192077;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (or_cond_fu_812_p2 == 1'd0))) begin
        i_reg_463 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        i_reg_463 <= i_3_reg_1444;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_644_p2 == 1'd1))) begin
        j_reg_427 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_427 <= j_2_reg_1293;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_processImage_fu_497_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        res_size_Scale_reg_450 <= grp_processImage_fu_497_ap_return;
    end else if (((1'b1 == ap_CS_fsm_state2) & ((tmp_reg_1281 == 1'd0) | ((tmp_39_fu_714_p2 == 1'd0) & (exitcond1_fu_680_p2 == 1'd1))))) begin
        res_size_Scale_reg_450 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_39_fu_714_p2 == 1'd1) & (exitcond1_fu_680_p2 == 1'd1) & (tmp_reg_1281 == 1'd1))) begin
        storemerge_reg_474 <= tmp_41_fu_720_p2;
    end else if (((1'b1 == ap_CS_fsm_state34) & (exitcond_fu_1249_p2 == 1'd1))) begin
        storemerge_reg_474 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        counter <= counter_new_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        counter_load_reg_1275 <= counter;
        tmp_reg_1281 <= tmp_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i_3_reg_1444 <= i_3_fu_1255_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_reg_1281 == 1'd1))) begin
        j_2_reg_1293 <= j_2_fu_686_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (or_cond_fu_812_p2 == 1'd1))) begin
        p_Result_2_reg_1358 <= p_Val2_16_fu_730_p1[32'd31];
        p_Result_3_reg_1363 <= p_Val2_21_fu_771_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        p_Result_s_reg_1402 <= p_Val2_s_fu_1085_p1[32'd63];
        p_Val2_26_reg_1407 <= p_Val2_26_fu_1206_p3;
        p_Val2_29_reg_1413 <= p_Val2_29_fu_1219_p3;
        p_Val2_31_reg_1419 <= p_Val2_31_fu_1231_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_imageScaler_fu_594_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
        p_Val2_27_reg_1425 <= p_Val2_27_fu_1243_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        p_Val2_28_reg_1390 <= p_Val2_28_fu_976_p3;
        p_Val2_30_reg_1396 <= p_Val2_30_fu_1077_p3;
        x_assign_reg_1385 <= grp_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_644_p2 == 1'd1))) begin
        tmp_149_reg_1285[17 : 6] <= tmp_149_fu_674_p2[17 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_680_p2 == 1'd0) & (tmp_reg_1281 == 1'd1))) begin
        tmp_150_reg_1298 <= tmp_150_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_21_i_reg_1380[63] <= tmp_21_i_fu_875_p3[63];
        tmp_i_reg_1375 <= tmp_i_fu_622_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (exitcond_fu_1249_p2 == 1'd0))) begin
        tmp_53_reg_1449[6 : 0] <= tmp_53_fu_1261_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_V_5_reg_1333 <= {{p_Val2_16_fu_730_p1[30:23]}};
        tmp_V_6_reg_1339 <= tmp_V_6_fu_743_p1;
        tmp_V_7_reg_1344 <= {{p_Val2_21_fu_771_p1[30:23]}};
        tmp_V_8_reg_1350 <= tmp_V_8_fu_784_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        value_assign_reg_1368 <= grp_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        x_assign_2_reg_1321 <= grp_fu_610_p2;
        x_assign_3_reg_1327 <= grp_fu_616_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Data_address0 = tmp_185_cast_fu_726_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        Data_address0 = grp_imageScaler_fu_594_Data_address0;
    end else begin
        Data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        Data_ce0 = grp_imageScaler_fu_594_Data_ce0;
    end else begin
        Data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Data_we0 = 1'b1;
    end else begin
        Data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        IMG1_data_address0 = grp_imageScaler_fu_594_IMG1_data_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        IMG1_data_address0 = grp_processImage_fu_497_IMG1_data_address0;
    end else begin
        IMG1_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        IMG1_data_ce0 = grp_imageScaler_fu_594_IMG1_data_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        IMG1_data_ce0 = grp_processImage_fu_497_IMG1_data_ce0;
    end else begin
        IMG1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        IMG1_data_ce1 = grp_processImage_fu_497_IMG1_data_ce1;
    end else begin
        IMG1_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        IMG1_data_we0 = grp_imageScaler_fu_594_IMG1_data_we0;
    end else begin
        IMG1_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        finished_ap_vld = 1'b1;
    end else begin
        finished_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | ((grp_processImage_fu_497_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | ((grp_imageScaler_fu_594_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31)))) begin
        grp_fu_603_ce = 1'b1;
    end else begin
        grp_fu_603_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_603_p1 = 32'd1067030938;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_603_p1 = 32'd1103101952;
    end else begin
        grp_fu_603_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_625_opcode = 5'd3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_625_opcode = 5'd2;
    end else begin
        grp_fu_625_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_625_p0 = value_assign_reg_1368;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_625_p0 = x_assign_2_reg_1321;
    end else begin
        grp_fu_625_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_625_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_625_p1 = 32'd1103626240;
    end else begin
        grp_fu_625_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        inData_ce0 = 1'b1;
    end else begin
        inData_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        result_h_Scale_address0 = tmp_53_fu_1261_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        result_h_Scale_address0 = grp_processImage_fu_497_AllCandidates_h_address0;
    end else begin
        result_h_Scale_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        result_h_Scale_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        result_h_Scale_ce0 = grp_processImage_fu_497_AllCandidates_h_ce0;
    end else begin
        result_h_Scale_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        result_h_Scale_we0 = grp_processImage_fu_497_AllCandidates_h_we0;
    end else begin
        result_h_Scale_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        result_h_ce0 = 1'b1;
    end else begin
        result_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        result_h_we0 = 1'b1;
    end else begin
        result_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) & (exitcond_fu_1249_p2 == 1'd1))) begin
        result_size_ap_vld = 1'b1;
    end else begin
        result_size_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        result_w_Scale_address0 = tmp_53_fu_1261_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        result_w_Scale_address0 = grp_processImage_fu_497_AllCandidates_w_address0;
    end else begin
        result_w_Scale_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        result_w_Scale_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        result_w_Scale_ce0 = grp_processImage_fu_497_AllCandidates_w_ce0;
    end else begin
        result_w_Scale_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        result_w_Scale_we0 = grp_processImage_fu_497_AllCandidates_w_we0;
    end else begin
        result_w_Scale_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        result_w_ce0 = 1'b1;
    end else begin
        result_w_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        result_w_we0 = 1'b1;
    end else begin
        result_w_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        result_x_Scale_address0 = tmp_53_fu_1261_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        result_x_Scale_address0 = grp_processImage_fu_497_AllCandidates_x_address0;
    end else begin
        result_x_Scale_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        result_x_Scale_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        result_x_Scale_ce0 = grp_processImage_fu_497_AllCandidates_x_ce0;
    end else begin
        result_x_Scale_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        result_x_Scale_we0 = grp_processImage_fu_497_AllCandidates_x_we0;
    end else begin
        result_x_Scale_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        result_x_ce0 = 1'b1;
    end else begin
        result_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        result_x_we0 = 1'b1;
    end else begin
        result_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        result_y_Scale_address0 = tmp_53_fu_1261_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        result_y_Scale_address0 = grp_processImage_fu_497_AllCandidates_y_address0;
    end else begin
        result_y_Scale_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        result_y_Scale_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        result_y_Scale_ce0 = grp_processImage_fu_497_AllCandidates_y_ce0;
    end else begin
        result_y_Scale_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        result_y_Scale_we0 = grp_processImage_fu_497_AllCandidates_y_we0;
    end else begin
        result_y_Scale_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        result_y_ce0 = 1'b1;
    end else begin
        result_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        result_y_we0 = 1'b1;
    end else begin
        result_y_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_39_fu_714_p2 == 1'd1) & (exitcond1_fu_680_p2 == 1'd1) & (tmp_reg_1281 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else if (((1'b1 == ap_CS_fsm_state2) & ((tmp_reg_1281 == 1'd0) | ((tmp_39_fu_714_p2 == 1'd0) & (exitcond1_fu_680_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (or_cond_fu_812_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((grp_imageScaler_fu_594_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((grp_processImage_fu_497_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (exitcond_fu_1249_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond1_fu_680_p2 = ((j_reg_427 == 9'd320) ? 1'b1 : 1'b0);

assign exitcond_fu_1249_p2 = ((i_reg_463 == 7'd100) ? 1'b1 : 1'b0);

assign grp_imageScaler_fu_594_ap_start = grp_imageScaler_fu_594_ap_start_reg;

assign grp_processImage_fu_497_ap_start = grp_processImage_fu_497_ap_start_reg;

assign i_3_fu_1255_p2 = (i_reg_463 + 7'd1);

assign inData_address0 = tmp_40_fu_692_p1;

assign isNeg_2_fu_905_p3 = sh_assign_8_fu_899_p2[32'd8];

assign isNeg_3_fu_1006_p3 = sh_assign_s_fu_1000_p2[32'd8];

assign isNeg_fu_1134_p3 = sh_assign_fu_1128_p2[32'd11];

assign j_2_fu_686_p2 = (j_reg_427 + 9'd1);

assign mantissa_V_2_fu_883_p4 = {{{{1'd1}, {tmp_V_6_reg_1339}}}, {1'd0}};

assign mantissa_V_3_fu_984_p4 = {{{{1'd1}, {tmp_V_8_reg_1350}}}, {1'd0}};

assign mantissa_V_4_cast_fu_1120_p1 = mantissa_V_fu_1110_p4;

assign mantissa_V_6_cast5_fu_892_p1 = mantissa_V_2_fu_883_p4;

assign mantissa_V_8_cast3_fu_993_p1 = mantissa_V_3_fu_984_p4;

assign mantissa_V_fu_1110_p4 = {{{{1'd1}, {tmp_V_4_fu_1106_p1}}}, {1'd0}};

assign notlhs1_fu_788_p2 = ((tmp_V_7_fu_774_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_851_p2 = ((tmp_52_fu_837_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_747_p2 = ((tmp_V_5_fu_733_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_794_p2 = ((tmp_V_8_fu_784_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_857_p2 = ((tmp_286_fu_847_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_753_p2 = ((tmp_V_6_fu_743_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_cond_fu_812_p2 = (tmp_51_fu_806_p2 & tmp_46_fu_765_p2);

assign p_Val2_16_fu_730_p1 = x_assign_2_reg_1321;

assign p_Val2_21_fu_771_p1 = x_assign_3_reg_1327;

assign p_Val2_26_fu_1206_p3 = ((isNeg_fu_1134_p3[0:0] === 1'b1) ? tmp_151_fu_1192_p1 : tmp_152_fu_1196_p4);

assign p_Val2_27_fu_1243_p3 = ((p_Result_s_reg_1402[0:0] === 1'b1) ? result_V_4_fu_1238_p2 : p_Val2_26_reg_1407);

assign p_Val2_28_fu_976_p3 = ((isNeg_2_fu_905_p3[0:0] === 1'b1) ? tmp_153_fu_962_p1 : tmp_154_fu_966_p4);

assign p_Val2_29_fu_1219_p3 = ((p_Result_2_reg_1358[0:0] === 1'b1) ? result_V_6_fu_1214_p2 : p_Val2_28_reg_1390);

assign p_Val2_30_fu_1077_p3 = ((isNeg_3_fu_1006_p3[0:0] === 1'b1) ? tmp_155_fu_1063_p1 : tmp_156_fu_1067_p4);

assign p_Val2_31_fu_1231_p3 = ((p_Result_3_reg_1363[0:0] === 1'b1) ? result_V_8_fu_1226_p2 : p_Val2_30_reg_1396);

assign p_Val2_s_fu_1085_p1 = x_assign_reg_1385;

assign p_shl2_cast_fu_666_p3 = {{tmp_282_fu_662_p1}, {6'd0}};

assign p_shl_cast_fu_654_p3 = {{tmp_281_fu_650_p1}, {8'd0}};

assign r_V_4_fu_1178_p2 = mantissa_V_4_cast_fu_1120_p1 << tmp_i_i_i_i_29_fu_1164_p1;

assign r_V_5_fu_942_p2 = mantissa_V_2_fu_883_p4 >> sh_assign_10_cast_ca_fu_934_p1;

assign r_V_6_fu_948_p2 = mantissa_V_6_cast5_fu_892_p1 << tmp_i_i_i_31_fu_938_p1;

assign r_V_7_fu_1043_p2 = mantissa_V_3_fu_984_p4 >> sh_assign_13_cast_ca_fu_1035_p1;

assign r_V_8_fu_1049_p2 = mantissa_V_8_cast3_fu_993_p1 << tmp_i_i_i1_32_fu_1039_p1;

assign r_V_fu_1172_p2 = mantissa_V_fu_1110_p4 >> tmp_i_i_i_i_cast_30_fu_1168_p1;

assign result_V_4_fu_1238_p2 = (32'd0 - p_Val2_26_reg_1407);

assign result_V_6_fu_1214_p2 = (32'd0 - p_Val2_28_reg_1390);

assign result_V_8_fu_1226_p2 = (32'd0 - p_Val2_30_reg_1396);

assign result_h_address0 = tmp_53_reg_1449;

assign result_w_address0 = tmp_53_reg_1449;

assign result_x_address0 = tmp_53_reg_1449;

assign result_y_address0 = tmp_53_reg_1449;

assign sh_assign_10_cast_ca_fu_934_p1 = ush_2_fu_922_p3;

assign sh_assign_10_cast_fu_930_p1 = ush_2_fu_922_p3;

assign sh_assign_13_cast_ca_fu_1035_p1 = ush_3_fu_1023_p3;

assign sh_assign_13_cast_fu_1031_p1 = ush_3_fu_1023_p3;

assign sh_assign_7_cast_fu_1160_p1 = $signed(ush_fu_1152_p3);

assign sh_assign_8_fu_899_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i2_cast4_fu_896_p1));

assign sh_assign_fu_1128_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_i_i_cast6_fu_1124_p1));

assign sh_assign_s_fu_1000_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i3_cast2_fu_997_p1));

assign tmp_149_fu_674_p2 = (p_shl_cast_fu_654_p3 + p_shl2_cast_fu_666_p3);

assign tmp_150_fu_701_p2 = (tmp_149_reg_1285 + tmp_40_cast_fu_697_p1);

assign tmp_151_fu_1192_p1 = tmp_290_fu_1184_p3;

assign tmp_152_fu_1196_p4 = {{r_V_4_fu_1178_p2[84:53]}};

assign tmp_153_fu_962_p1 = tmp_293_fu_954_p3;

assign tmp_154_fu_966_p4 = {{r_V_6_fu_948_p2[55:24]}};

assign tmp_155_fu_1063_p1 = tmp_296_fu_1055_p3;

assign tmp_156_fu_1067_p4 = {{r_V_8_fu_1049_p2[55:24]}};

assign tmp_185_cast_fu_726_p1 = $signed(tmp_150_reg_1298);

assign tmp_21_i_fu_875_p3 = ((tmp_57_fu_869_p2[0:0] === 1'b1) ? 64'd4602678819172646912 : 64'd13826050856027422720);

assign tmp_281_fu_650_p1 = counter[9:0];

assign tmp_282_fu_662_p1 = counter[11:0];

assign tmp_283_fu_706_p1 = counter_load_reg_1275[7:0];

assign tmp_286_fu_847_p1 = value_assign_to_int_fu_834_p1[22:0];

assign tmp_290_fu_1184_p3 = r_V_fu_1172_p2[32'd53];

assign tmp_293_fu_954_p3 = r_V_5_fu_942_p2[32'd24];

assign tmp_296_fu_1055_p3 = r_V_7_fu_1043_p2[32'd24];

assign tmp_39_fu_714_p2 = (($signed(tmp_s_fu_709_p2) < $signed(32'd240)) ? 1'b1 : 1'b0);

assign tmp_40_cast_fu_697_p1 = j_reg_427;

assign tmp_40_fu_692_p1 = j_reg_427;

assign tmp_41_fu_720_p2 = (tmp_283_fu_706_p1 + 8'd1);

assign tmp_44_fu_759_p2 = (notrhs_fu_753_p2 | notlhs_fu_747_p2);

assign tmp_46_fu_765_p2 = (tmp_44_fu_759_p2 & grp_fu_625_p2);

assign tmp_49_fu_800_p2 = (notrhs1_fu_794_p2 | notlhs1_fu_788_p2);

assign tmp_51_fu_806_p2 = (tmp_50_fu_630_p2 & tmp_49_fu_800_p2);

assign tmp_52_fu_837_p4 = {{value_assign_to_int_fu_834_p1[30:23]}};

assign tmp_53_fu_1261_p1 = i_reg_463;

assign tmp_55_fu_863_p2 = (notrhs2_fu_857_p2 | notlhs2_fu_851_p2);

assign tmp_57_fu_869_p2 = (tmp_55_fu_863_p2 & grp_fu_625_p2);

assign tmp_V_4_fu_1106_p1 = p_Val2_s_fu_1085_p1[51:0];

assign tmp_V_5_fu_733_p4 = {{p_Val2_16_fu_730_p1[30:23]}};

assign tmp_V_6_fu_743_p1 = p_Val2_16_fu_730_p1[22:0];

assign tmp_V_7_fu_774_p4 = {{p_Val2_21_fu_771_p1[30:23]}};

assign tmp_V_8_fu_784_p1 = p_Val2_21_fu_771_p1[22:0];

assign tmp_V_fu_1096_p4 = {{p_Val2_s_fu_1085_p1[62:52]}};

assign tmp_fu_644_p2 = (($signed(counter) < $signed(32'd240)) ? 1'b1 : 1'b0);

assign tmp_i_i_i1_32_fu_1039_p1 = $unsigned(sh_assign_13_cast_fu_1031_p1);

assign tmp_i_i_i1_cast_fu_1019_p1 = $signed(tmp_i_i_i1_fu_1014_p2);

assign tmp_i_i_i1_fu_1014_p2 = (8'd127 - tmp_V_7_reg_1344);

assign tmp_i_i_i_31_fu_938_p1 = $unsigned(sh_assign_10_cast_fu_930_p1);

assign tmp_i_i_i_cast_fu_918_p1 = $signed(tmp_i_i_i_fu_913_p2);

assign tmp_i_i_i_fu_913_p2 = (8'd127 - tmp_V_5_reg_1333);

assign tmp_i_i_i_i2_cast4_fu_896_p1 = tmp_V_5_reg_1333;

assign tmp_i_i_i_i3_cast2_fu_997_p1 = tmp_V_7_reg_1344;

assign tmp_i_i_i_i_29_fu_1164_p1 = $unsigned(sh_assign_7_cast_fu_1160_p1);

assign tmp_i_i_i_i_cast_30_fu_1168_p1 = $unsigned(sh_assign_7_cast_fu_1160_p1);

assign tmp_i_i_i_i_cast_fu_1148_p1 = $signed(tmp_i_i_i_i_fu_1142_p2);

assign tmp_i_i_i_i_fu_1142_p2 = (11'd1023 - tmp_V_fu_1096_p4);

assign tmp_i_i_i_i_i_cast6_fu_1124_p1 = tmp_V_fu_1096_p4;

assign tmp_s_fu_709_p2 = (32'd1 + counter_load_reg_1275);

assign ush_2_fu_922_p3 = ((isNeg_2_fu_905_p3[0:0] === 1'b1) ? tmp_i_i_i_cast_fu_918_p1 : sh_assign_8_fu_899_p2);

assign ush_3_fu_1023_p3 = ((isNeg_3_fu_1006_p3[0:0] === 1'b1) ? tmp_i_i_i1_cast_fu_1019_p1 : sh_assign_s_fu_1000_p2);

assign ush_fu_1152_p3 = ((isNeg_fu_1134_p3[0:0] === 1'b1) ? tmp_i_i_i_i_cast_fu_1148_p1 : sh_assign_fu_1128_p2);

assign value_assign_to_int_fu_834_p1 = value_assign_reg_1368;

always @ (posedge ap_clk) begin
    tmp_149_reg_1285[5:0] <= 6'b000000;
    tmp_21_i_reg_1380[62:0] <= 63'b011111111100000000000000000000000000000000000000000000000000000;
    tmp_53_reg_1449[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //detectFaces
