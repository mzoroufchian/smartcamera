-- ==============================================================
-- File generated on Thu Jul 18 13:24:11 +0200 2019
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
-- SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
-- IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
-- Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity cascadeClassifierqcK_rom is 
    generic(
             DWIDTH     : integer := 4; 
             AWIDTH     : integer := 12; 
             MEM_SIZE    : integer := 2913
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of cascadeClassifierqcK_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 34=> "0000", 35 => "0111", 36 to 47=> "0000", 48 => "0111", 49 to 55=> "0000", 
    56 => "0110", 57 to 61=> "0000", 62 => "1000", 63 to 69=> "0000", 70 => "1010", 
    71 to 74=> "0000", 75 => "0100", 76 => "0111", 77 to 104=> "0000", 105 => "1010", 
    106 to 108=> "0000", 109 to 110=> "0110", 111 to 117=> "0000", 118 => "1001", 119 => "0000", 
    120 => "0111", 121 => "0101", 122 => "0110", 123 to 151=> "0000", 152 => "0100", 
    153 to 159=> "0000", 160 => "0101", 161 to 163=> "0000", 164 => "1010", 165 to 175=> "0000", 
    176 => "1100", 177 => "1011", 178 to 186=> "0000", 187 => "0100", 188 to 201=> "0000", 
    202 => "0111", 203 to 205=> "0000", 206 to 207=> "1011", 208 to 214=> "0000", 215 => "1000", 
    216 => "0000", 217 => "1100", 218 to 222=> "0000", 223 => "0111", 224 => "1001", 
    225 to 229=> "0000", 230 => "0101", 231 to 233=> "0000", 234 => "1001", 235 => "0111", 
    236 to 240=> "0000", 241 => "1100", 242 => "1011", 243 to 247=> "0000", 248 => "0011", 
    249 => "1010", 250 to 254=> "0000", 255 => "0110", 256 to 260=> "0000", 261 => "0011", 
    262 to 287=> "0000", 288 => "0101", 289 to 290=> "0000", 291 => "0011", 292 to 316=> "0000", 
    317 => "1010", 318 => "0011", 319 => "1011", 320 to 326=> "0000", 327 => "0100", 
    328 to 335=> "0000", 336 to 337=> "0011", 338 to 358=> "0000", 359 => "1011", 360 => "1000", 
    361 => "1001", 362 => "0100", 363 => "0011", 364 to 365=> "0000", 366 to 367=> "0011", 
    368 to 372=> "0000", 373 => "0101", 374 to 375=> "0011", 376 to 411=> "0000", 412 => "0110", 
    413 to 414=> "0000", 415 to 416=> "0101", 417 to 443=> "0000", 444 => "0111", 445 to 450=> "0000", 
    451 => "1011", 452 => "0000", 453 => "1100", 454 => "1001", 455 to 458=> "0000", 
    459 to 460=> "0101", 461 => "1100", 462 => "0000", 463 to 464=> "1000", 465 to 472=> "0000", 
    473 => "0011", 474 to 477=> "0000", 478 => "0011", 479 to 480=> "0000", 481 => "0101", 
    482 to 489=> "0000", 490 => "0010", 491 to 519=> "0000", 520 => "1000", 521 => "0101", 
    522 to 524=> "0000", 525 => "0110", 526 to 528=> "0000", 529 => "0100", 530 to 541=> "0000", 
    542 => "1100", 543 to 545=> "0000", 546 => "0100", 547 => "0000", 548 to 549=> "0100", 
    550 to 553=> "0000", 554 => "1000", 555 to 558=> "0000", 559 => "0100", 560 to 586=> "0000", 
    587 => "0101", 588 => "0010", 589 to 590=> "0000", 591 => "0100", 592 => "1100", 
    593 => "0000", 594 to 595=> "0101", 596 to 623=> "0000", 624 => "0110", 625 => "0100", 
    626 to 654=> "0000", 655 => "0100", 656 to 658=> "0000", 659 => "0111", 660 to 664=> "0000", 
    665 to 666=> "0011", 667 to 674=> "0000", 675 => "0110", 676 to 677=> "0000", 678 => "0110", 
    679 to 680=> "0100", 681 to 682=> "0000", 683 => "1000", 684 to 685=> "0000", 686 => "0111", 
    687 to 690=> "0000", 691 => "0010", 692 to 693=> "0000", 694 => "0010", 695 to 698=> "0000", 
    699 => "0110", 700 => "1100", 701 to 703=> "0000", 704 => "1001", 705 to 706=> "0111", 
    707 to 721=> "0000", 722 => "0011", 723 to 725=> "0000", 726 => "0110", 727 to 750=> "0000", 
    751 => "0111", 752 => "1100", 753 to 755=> "0000", 756 to 757=> "0100", 758 => "0110", 
    759 to 760=> "0000", 761 => "0110", 762 to 769=> "0000", 770 => "1010", 771 to 774=> "0000", 
    775 => "0101", 776 to 777=> "0000", 778 => "0100", 779 to 783=> "0000", 784 => "1100", 
    785 => "0000", 786 => "1100", 787 to 799=> "0000", 800 => "0101", 801 to 806=> "0000", 
    807 => "0011", 808 to 818=> "0000", 819 => "0100", 820 to 832=> "0000", 833 => "0100", 
    834 to 850=> "0000", 851 => "1100", 852 to 854=> "0000", 855 => "1011", 856 to 858=> "0000", 
    859 => "1000", 860 => "0000", 861 => "0011", 862 => "1000", 863 to 864=> "0000", 
    865 => "0100", 866 => "0110", 867 => "0000", 868 => "0100", 869 to 875=> "0000", 
    876 => "0011", 877 to 910=> "0000", 911 => "0100", 912 => "1000", 913 to 919=> "0000", 
    920 => "0011", 921 to 945=> "0000", 946 => "0111", 947 => "1011", 948 => "0000", 
    949 to 950=> "0101", 951 => "1000", 952 => "0000", 953 => "0100", 954 => "0000", 
    955 => "0100", 956 => "0000", 957 => "0100", 958 => "0000", 959 => "0111", 
    960 to 961=> "0000", 962 => "0110", 963 to 964=> "0000", 965 to 966=> "0100", 967 => "0000", 
    968 => "1000", 969 to 976=> "0000", 977 => "0110", 978 => "0100", 979 => "0000", 
    980 to 981=> "0100", 982 to 989=> "0000", 990 to 991=> "0110", 992 to 1008=> "0000", 1009 => "0110", 
    1010 to 1011=> "0000", 1012 => "0100", 1013 => "0011", 1014 to 1015=> "0000", 1016 to 1017=> "0011", 
    1018 => "0111", 1019 to 1020=> "0000", 1021 => "1011", 1022 to 1043=> "0000", 1044 => "1001", 
    1045 => "0000", 1046 to 1047=> "1010", 1048 to 1056=> "0000", 1057 => "0100", 1058 => "1011", 
    1059 to 1073=> "0000", 1074 => "0101", 1075 to 1079=> "0000", 1080 to 1081=> "0111", 1082 => "0000", 
    1083 => "0011", 1084 to 1086=> "0000", 1087 => "0011", 1088 to 1093=> "0000", 1094 to 1095=> "0101", 
    1096 => "1100", 1097 => "0000", 1098 => "1100", 1099 => "0000", 1100 => "1011", 
    1101 to 1136=> "0000", 1137 => "0111", 1138 to 1139=> "0110", 1140 => "0000", 1141 => "1010", 
    1142 to 1160=> "0000", 1161 => "1011", 1162 to 1176=> "0000", 1177 => "1100", 1178 => "0000", 
    1179 => "0110", 1180 to 1181=> "0111", 1182 to 1183=> "0000", 1184 => "1010", 1185 to 1208=> "0000", 
    1209 => "1000", 1210 => "0111", 1211 to 1212=> "1010", 1213 to 1225=> "0000", 1226 => "0100", 
    1227 to 1232=> "0000", 1233 to 1234=> "0110", 1235 to 1237=> "0000", 1238 => "0110", 1239 to 1242=> "0000", 
    1243 => "0100", 1244 to 1255=> "0000", 1256 => "0010", 1257 to 1261=> "0000", 1262 => "1010", 
    1263 => "0000", 1264 => "0011", 1265 to 1266=> "1001", 1267 to 1288=> "0000", 1289 => "0100", 
    1290 => "0000", 1291 => "0100", 1292 => "0000", 1293 => "0100", 1294 => "0000", 
    1295 => "0010", 1296 => "0000", 1297 to 1298=> "0100", 1299 => "0011", 1300 => "0000", 
    1301 => "0110", 1302 => "1001", 1303 => "0100", 1304 => "1011", 1305 => "0110", 
    1306 to 1307=> "1010", 1308 => "0101", 1309 to 1311=> "0000", 1312 => "1011", 1313 to 1314=> "0000", 
    1315 => "0101", 1316 to 1324=> "0000", 1325 to 1326=> "0100", 1327 to 1328=> "0000", 1329 to 1330=> "0011", 
    1331 to 1334=> "0000", 1335 => "0110", 1336 => "1100", 1337 to 1347=> "0000", 1348 => "0011", 
    1349 to 1352=> "0000", 1353 => "1001", 1354 => "0011", 1355 => "0110", 1356 to 1369=> "0000", 
    1370 => "0110", 1371 to 1372=> "0100", 1373 to 1376=> "0000", 1377 => "0100", 1378 to 1388=> "0000", 
    1389 to 1390=> "0101", 1391 to 1406=> "0000", 1407 => "0100", 1408 => "0011", 1409 to 1410=> "0000", 
    1411 => "0110", 1412 to 1423=> "0000", 1424 => "0101", 1425 to 1426=> "0000", 1427 => "1000", 
    1428 to 1447=> "0000", 1448 => "1011", 1449 to 1450=> "0000", 1451 => "0110", 1452 to 1458=> "0000", 
    1459 => "0110", 1460 to 1467=> "0000", 1468 to 1470=> "0011", 1471 => "0000", 1472 => "1001", 
    1473 to 1481=> "0000", 1482 => "0110", 1483 => "0100", 1484 to 1485=> "0101", 1486 => "0000", 
    1487 => "0101", 1488 => "0110", 1489 => "0010", 1490 to 1491=> "0011", 1492 => "0000", 
    1493 => "0011", 1494 to 1495=> "0000", 1496 => "0100", 1497 => "1000", 1498 to 1499=> "0000", 
    1500 => "0100", 1501 => "0000", 1502 to 1505=> "0100", 1506 to 1509=> "0000", 1510 => "0100", 
    1511 => "1100", 1512 => "0000", 1513 => "0110", 1514 => "0000", 1515 => "0100", 
    1516 to 1519=> "0000", 1520 to 1521=> "0110", 1522 to 1529=> "0000", 1530 => "0110", 1531 to 1541=> "0000", 
    1542 => "1000", 1543 to 1547=> "0000", 1548 => "0011", 1549 to 1555=> "0000", 1556 => "0100", 
    1557 to 1564=> "0000", 1565 => "0110", 1566 => "1010", 1567 to 1570=> "0000", 1571 => "1100", 
    1572 to 1575=> "0000", 1576 => "0111", 1577 => "0100", 1578 to 1582=> "0000", 1583 => "0100", 
    1584 to 1595=> "0000", 1596 => "0110", 1597 to 1604=> "0000", 1605 => "0110", 1606 => "0000", 
    1607 => "0100", 1608 to 1609=> "0000", 1610 => "0100", 1611 => "0000", 1612 => "0110", 
    1613 to 1647=> "0000", 1648 => "0101", 1649 to 1650=> "0000", 1651 => "1011", 1652 => "0100", 
    1653 => "0011", 1654 to 1656=> "0000", 1657 => "0100", 1658 => "0011", 1659 => "0000", 
    1660 => "0100", 1661 to 1667=> "0000", 1668 => "0101", 1669 => "0110", 1670 to 1676=> "0000", 
    1677 => "1001", 1678 to 1679=> "0000", 1680 => "1011", 1681 to 1682=> "0000", 1683 to 1684=> "0110", 
    1685 => "1011", 1686 to 1701=> "0000", 1702 => "0101", 1703 to 1712=> "0000", 1713 => "1100", 
    1714 to 1719=> "0000", 1720 => "0110", 1721 to 1725=> "0000", 1726 => "0101", 1727 to 1750=> "0000", 
    1751 => "0111", 1752 to 1762=> "0000", 1763 => "1000", 1764 => "0111", 1765 => "0000", 
    1766 => "0110", 1767 => "0000", 1768 => "0111", 1769 => "1001", 1770 to 1785=> "0000", 
    1786 => "0011", 1787 to 1788=> "0000", 1789 => "0110", 1790 => "0000", 1791 => "0100", 
    1792 to 1799=> "0000", 1800 => "0010", 1801 to 1804=> "0000", 1805 => "0100", 1806 to 1809=> "0000", 
    1810 => "1000", 1811 to 1812=> "0000", 1813 => "1100", 1814 to 1815=> "0000", 1816 => "1011", 
    1817 to 1819=> "0000", 1820 to 1821=> "0110", 1822 to 1829=> "0000", 1830 => "1100", 1831 to 1832=> "0000", 
    1833 => "0011", 1834 to 1836=> "0000", 1837 => "0101", 1838 => "0111", 1839 => "0000", 
    1840 to 1841=> "0011", 1842 to 1861=> "0000", 1862 => "0100", 1863 to 1873=> "0000", 1874 => "0110", 
    1875 to 1879=> "0000", 1880 => "0011", 1881 to 1882=> "0000", 1883 => "0011", 1884 => "0110", 
    1885 to 1891=> "0000", 1892 => "0101", 1893 => "1000", 1894 to 1899=> "0000", 1900 to 1901=> "0111", 
    1902 to 1912=> "0000", 1913 => "1001", 1914 to 1915=> "1010", 1916 => "0000", 1917 => "1010", 
    1918 to 1939=> "0000", 1940 => "0011", 1941 to 1945=> "0000", 1946 => "0110", 1947 => "1010", 
    1948 => "0000", 1949 => "1001", 1950 to 1951=> "0010", 1952 to 1955=> "0000", 1956 => "1000", 
    1957 => "0000", 1958 => "0011", 1959 to 1962=> "0000", 1963 => "0011", 1964 to 1966=> "0000", 
    1967 => "0110", 1968 to 1977=> "0000", 1978 => "1001", 1979 to 1984=> "0000", 1985 => "0110", 
    1986 to 1991=> "0000", 1992 => "1010", 1993 to 2002=> "0000", 2003 to 2004=> "1000", 2005 => "1100", 
    2006 to 2008=> "0000", 2009 => "0100", 2010 to 2014=> "0000", 2015 => "1100", 2016 => "0000", 
    2017 => "0100", 2018 => "0000", 2019 => "0101", 2020 => "0111", 2021 => "0101", 
    2022 to 2024=> "0000", 2025 => "1011", 2026 to 2035=> "0000", 2036 => "0010", 2037 to 2038=> "0000", 
    2039 => "1001", 2040 to 2041=> "0010", 2042 => "1010", 2043 to 2045=> "0000", 2046 to 2047=> "0100", 
    2048 to 2060=> "0000", 2061 => "0011", 2062 to 2066=> "0000", 2067 => "0101", 2068 to 2069=> "0000", 
    2070 => "0010", 2071 => "0000", 2072 => "0010", 2073 => "0101", 2074 => "0010", 
    2075 => "0000", 2076 => "0010", 2077 to 2083=> "0000", 2084 => "1001", 2085 to 2088=> "0000", 
    2089 to 2091=> "0010", 2092 => "1001", 2093 to 2094=> "0000", 2095 => "1001", 2096 => "0111", 
    2097 to 2101=> "0000", 2102 => "0011", 2103 => "0010", 2104 => "0101", 2105 => "0100", 
    2106 => "0110", 2107 to 2141=> "0000", 2142 => "0110", 2143 to 2145=> "0000", 2146 => "0110", 
    2147 to 2152=> "0000", 2153 => "0010", 2154 to 2163=> "0000", 2164 => "0011", 2165 to 2166=> "0100", 
    2167 => "0110", 2168 to 2169=> "0000", 2170 => "0111", 2171 to 2173=> "0000", 2174 => "0011", 
    2175 to 2180=> "0000", 2181 => "0100", 2182 to 2185=> "0000", 2186 => "0100", 2187 to 2188=> "0000", 
    2189 => "1001", 2190 to 2191=> "0000", 2192 => "0110", 2193 to 2196=> "0000", 2197 => "0010", 
    2198 => "0000", 2199 => "0010", 2200 to 2203=> "0000", 2204 => "0010", 2205 to 2206=> "0100", 
    2207 to 2229=> "0000", 2230 => "0010", 2231 to 2237=> "0000", 2238 => "0011", 2239 to 2244=> "0000", 
    2245 => "0100", 2246 to 2251=> "0000", 2252 => "0100", 2253 => "1000", 2254 to 2263=> "0000", 
    2264 => "0011", 2265 => "1100", 2266 to 2272=> "0000", 2273 => "0110", 2274 => "0000", 
    2275 => "0110", 2276 to 2277=> "0000", 2278 to 2279=> "1011", 2280 to 2286=> "0000", 2287 => "0101", 
    2288 => "0000", 2289 to 2292=> "0011", 2293 to 2317=> "0000", 2318 => "0100", 2319 => "0000", 
    2320 => "0100", 2321 => "0101", 2322 => "1001", 2323 to 2328=> "0000", 2329 => "0110", 
    2330 to 2336=> "0000", 2337 => "0010", 2338 to 2339=> "0011", 2340 => "0000", 2341 => "1001", 
    2342 to 2345=> "0000", 2346 to 2347=> "0010", 2348 to 2349=> "0000", 2350 => "0010", 2351 => "0101", 
    2352 to 2353=> "0000", 2354 => "0010", 2355 => "0000", 2356 => "0101", 2357 to 2364=> "0000", 
    2365 => "0101", 2366 to 2367=> "0000", 2368 to 2369=> "0010", 2370 to 2373=> "0000", 2374 => "0111", 
    2375 to 2377=> "0000", 2378 => "1000", 2379 to 2381=> "0000", 2382 to 2383=> "1000", 2384 to 2385=> "0000", 
    2386 => "0101", 2387 to 2394=> "0000", 2395 => "0010", 2396 to 2411=> "0000", 2412 => "1010", 
    2413 to 2424=> "0000", 2425 => "1010", 2426 to 2427=> "0000", 2428 to 2429=> "0010", 2430 to 2432=> "0000", 
    2433 => "0110", 2434 to 2435=> "0000", 2436 to 2437=> "0011", 2438 => "0111", 2439 to 2440=> "0000", 
    2441 => "0010", 2442 to 2444=> "0000", 2445 => "0011", 2446 to 2447=> "0000", 2448 => "1011", 
    2449 to 2455=> "0000", 2456 to 2457=> "1001", 2458 to 2459=> "0000", 2460 => "1001", 2461 to 2462=> "0000", 
    2463 => "1001", 2464 to 2478=> "0000", 2479 => "0110", 2480 to 2484=> "0000", 2485 => "0100", 
    2486 to 2489=> "0000", 2490 => "0101", 2491 to 2492=> "0011", 2493 => "0101", 2494 to 2495=> "0000", 
    2496 => "1001", 2497 to 2500=> "0000", 2501 => "0100", 2502 to 2509=> "0000", 2510 => "0110", 
    2511 => "1001", 2512 => "0000", 2513 => "0101", 2514 to 2534=> "0000", 2535 to 2536=> "0011", 
    2537 => "0010", 2538 => "0000", 2539 => "0110", 2540 => "0010", 2541 => "0000", 
    2542 => "0110", 2543 to 2544=> "0100", 2545 to 2552=> "0000", 2553 => "0111", 2554 => "0000", 
    2555 => "0110", 2556 to 2567=> "0000", 2568 => "1001", 2569 to 2579=> "0000", 2580 => "0011", 
    2581 to 2584=> "0100", 2585 to 2586=> "0000", 2587 => "1010", 2588 => "0000", 2589 => "0100", 
    2590 => "1000", 2591 => "0000", 2592 => "0101", 2593 to 2594=> "0000", 2595 => "0101", 
    2596 => "0000", 2597 to 2598=> "0101", 2599 to 2607=> "0000", 2608 => "1001", 2609 to 2610=> "0000", 
    2611 => "1001", 2612 => "0110", 2613 to 2615=> "0000", 2616 => "1010", 2617 to 2625=> "0000", 
    2626 => "0100", 2627 to 2640=> "0000", 2641 => "0101", 2642 => "0100", 2643 to 2644=> "0000", 
    2645 to 2646=> "0111", 2647 => "0000", 2648 => "0011", 2649 to 2652=> "0000", 2653 => "1100", 
    2654 to 2655=> "0000", 2656 => "1001", 2657 to 2669=> "0000", 2670 => "1000", 2671 => "0101", 
    2672 to 2673=> "0000", 2674 => "0110", 2675 => "0100", 2676 to 2678=> "0000", 2679 => "1001", 
    2680 to 2705=> "0000", 2706 => "1001", 2707 => "1000", 2708 to 2710=> "0000", 2711 => "0101", 
    2712 to 2717=> "0000", 2718 => "0110", 2719 to 2722=> "0000", 2723 => "0110", 2724 to 2727=> "0000", 
    2728 => "0111", 2729 to 2756=> "0000", 2757 => "0110", 2758 => "0000", 2759 => "0011", 
    2760 to 2768=> "0000", 2769 => "0110", 2770 to 2771=> "0010", 2772 to 2773=> "0000", 2774 => "0110", 
    2775 => "0000", 2776 to 2779=> "0101", 2780 to 2785=> "0000", 2786 => "1001", 2787 to 2793=> "0000", 
    2794 to 2795=> "0100", 2796 => "0000", 2797 => "0110", 2798 => "0100", 2799 => "0110", 
    2800 to 2801=> "1001", 2802 to 2815=> "0000", 2816 to 2817=> "0011", 2818 to 2825=> "0000", 2826 => "1000", 
    2827 to 2831=> "0000", 2832 => "0010", 2833 to 2837=> "0000", 2838 => "0100", 2839 to 2845=> "0000", 
    2846 => "1100", 2847 to 2850=> "0000", 2851 => "1011", 2852 to 2856=> "0000", 2857 => "1001", 
    2858 => "0010", 2859 to 2865=> "0000", 2866 => "1000", 2867 to 2874=> "0000", 2875 to 2877=> "0011", 
    2878 => "1001", 2879 => "0010", 2880 to 2881=> "0100", 2882 to 2883=> "0101", 2884 to 2893=> "0000", 
    2894 => "0101", 2895 => "1011", 2896 to 2897=> "0000", 2898 to 2899=> "0011", 2900 => "0000", 
    2901 => "1011", 2902 to 2911=> "0000", 2912 => "0011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity cascadeClassifierqcK is
    generic (
        DataWidth : INTEGER := 4;
        AddressRange : INTEGER := 2913;
        AddressWidth : INTEGER := 12);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of cascadeClassifierqcK is
    component cascadeClassifierqcK_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    cascadeClassifierqcK_rom_U :  component cascadeClassifierqcK_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


